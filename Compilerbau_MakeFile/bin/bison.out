Terminals unused in grammar

   COLON
   UNARY_PLUS


State 124 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program_element_list

    2 program_element_list: program_element_list program_element
    3                     | program_element

    4 program_element: variable_declaration SEMICOLON
    5                | function_declaration SEMICOLON
    6                | function_definition
    7                | SEMICOLON

    8 type: INT
    9     | VOID

   10 variable_declaration: variable_declaration COMMA identifier_declaration
   11                     | type identifier_declaration

   12 identifier_declaration: ID BRACKET_OPEN NUM BRACKET_CLOSE
   13                       | ID

   14 @1: /* empty */

   15 function_definition: type ID PARA_OPEN PARA_CLOSE @1 BRACE_OPEN stmt_list BRACE_CLOSE

   16 @2: /* empty */

   17 function_definition: type ID PARA_OPEN function_parameter_list PARA_CLOSE @2 BRACE_OPEN stmt_list BRACE_CLOSE

   18 function_declaration: type ID PARA_OPEN PARA_CLOSE
   19                     | type ID PARA_OPEN function_parameter_list PARA_CLOSE

   20 function_parameter_list: function_parameter
   21                        | function_parameter_list COMMA function_parameter

   22 function_parameter: type identifier_declaration

   23 stmt_list: /* empty */
   24          | stmt_list stmt

   25 stmt: stmt_block
   26     | variable_declaration SEMICOLON
   27     | expression SEMICOLON
   28     | stmt_conditional
   29     | stmt_loop
   30     | RETURN expression SEMICOLON
   31     | RETURN SEMICOLON
   32     | SEMICOLON

   33 stmt_block: BRACE_OPEN stmt_list BRACE_CLOSE

   34 $@3: /* empty */

   35 stmt_conditional: IF PARA_OPEN expression $@3 PARA_CLOSE stmt_conditional_r

   36 stmt_conditional_r: stmt

   37 $@4: /* empty */

   38 stmt_conditional_r: stmt ELSE $@4 stmt

   39 $@5: /* empty */

   40 $@6: /* empty */

   41 stmt_loop: WHILE $@5 PARA_OPEN expression PARA_CLOSE $@6 stmt

   42 $@7: /* empty */

   43 stmt_loop: DO $@7 stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON

   44 expression: expression ASSIGN expression
   45           | expression LOGICAL_OR expression
   46           | expression LOGICAL_AND expression
   47           | LOGICAL_NOT expression
   48           | expression EQ expression
   49           | expression NE expression
   50           | expression LS expression
   51           | expression LSEQ expression
   52           | expression GTEQ expression
   53           | expression GT expression
   54           | expression PLUS expression
   55           | expression MINUS expression
   56           | expression MUL expression
   57           | expression SHIFT_LEFT expression
   58           | expression SHIFT_RIGHT expression
   59           | MINUS expression
   60           | ID BRACKET_OPEN primary BRACKET_CLOSE
   61           | PARA_OPEN expression PARA_CLOSE
   62           | function_call
   63           | primary

   64 primary: NUM
   65        | ID

   66 function_call: ID PARA_OPEN PARA_CLOSE
   67              | ID PARA_OPEN function_call_parameters PARA_CLOSE

   68 function_call_parameters: function_call_parameters COMMA expression
   69                         | expression


Terminals, with rules where they appear

$end (0) 0
error (256)
DO (258) 43
WHILE (259) 41 43
IF (260) 35
ELSE (261) 38
INT (262) 8
VOID (263) 9
RETURN (264) 30 31
COLON (265)
COMMA (266) 10 21 68
SEMICOLON (267) 4 5 7 26 27 30 31 32 43
BRACE_OPEN (268) 15 17 33
BRACE_CLOSE (269) 15 17 33
ID (270) 12 13 15 17 18 19 60 65 66 67
NUM (271) 12 64
ASSIGN (272) 44
LOGICAL_OR (273) 45
LOGICAL_AND (274) 46
NE (275) 49
EQ (276) 48
GT (277) 53
GTEQ (278) 52
LSEQ (279) 51
LS (280) 50
SHIFT_RIGHT (281) 58
SHIFT_LEFT (282) 57
MINUS (283) 55 59
PLUS (284) 54
MUL (285) 56
UNARY_PLUS (286)
UNARY_MINUS (287)
LOGICAL_NOT (288) 47
PARA_CLOSE (289) 15 17 18 19 35 41 43 61 66 67
PARA_OPEN (290) 15 17 18 19 35 41 43 61 66 67
BRACKET_CLOSE (291) 12 60
BRACKET_OPEN (292) 12 60


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1, on right: 0
program_element_list (40)
    on left: 2 3, on right: 1 2
program_element (41)
    on left: 4 5 6 7, on right: 2 3
type (42)
    on left: 8 9, on right: 11 15 17 18 19 22
variable_declaration (43)
    on left: 10 11, on right: 4 10 26
identifier_declaration (44)
    on left: 12 13, on right: 10 11 22
function_definition (45)
    on left: 15 17, on right: 6
@1 (46)
    on left: 14, on right: 15
@2 (47)
    on left: 16, on right: 17
function_declaration (48)
    on left: 18 19, on right: 5
function_parameter_list (49)
    on left: 20 21, on right: 17 19 21
function_parameter (50)
    on left: 22, on right: 20 21
stmt_list (51)
    on left: 23 24, on right: 15 17 24 33
stmt (52)
    on left: 25 26 27 28 29 30 31 32, on right: 24 36 38 41 43
stmt_block (53)
    on left: 33, on right: 25
stmt_conditional (54)
    on left: 35, on right: 28
$@3 (55)
    on left: 34, on right: 35
stmt_conditional_r (56)
    on left: 36 38, on right: 35
$@4 (57)
    on left: 37, on right: 38
stmt_loop (58)
    on left: 41 43, on right: 29
$@5 (59)
    on left: 39, on right: 41
$@6 (60)
    on left: 40, on right: 41
$@7 (61)
    on left: 42, on right: 43
expression (62)
    on left: 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61
    62 63, on right: 27 30 35 41 43 44 45 46 47 48 49 50 51 52 53 54
    55 56 57 58 59 61 68 69
primary (63)
    on left: 64 65, on right: 60 63
function_call (64)
    on left: 66 67, on right: 62
function_call_parameters (65)
    on left: 68 69, on right: 67 68


state 0

    0 $accept: . program $end
    1 program: . program_element_list
    2 program_element_list: . program_element_list program_element
    3                     | . program_element
    4 program_element: . variable_declaration SEMICOLON
    5                | . function_declaration SEMICOLON
    6                | . function_definition
    7                | . SEMICOLON
    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   15 function_definition: . type ID PARA_OPEN PARA_CLOSE @1 BRACE_OPEN stmt_list BRACE_CLOSE
   17                    | . type ID PARA_OPEN function_parameter_list PARA_CLOSE @2 BRACE_OPEN stmt_list BRACE_CLOSE
   18 function_declaration: . type ID PARA_OPEN PARA_CLOSE
   19                     | . type ID PARA_OPEN function_parameter_list PARA_CLOSE

    INT        shift, and go to state 1
    VOID       shift, and go to state 2
    SEMICOLON  shift, and go to state 3

    program               go to state 4
    program_element_list  go to state 5
    program_element       go to state 6
    type                  go to state 7
    variable_declaration  go to state 8
    function_definition   go to state 9
    function_declaration  go to state 10


state 1

    8 type: INT .

    $default  reduce using rule 8 (type)


state 2

    9 type: VOID .

    $default  reduce using rule 9 (type)


state 3

    7 program_element: SEMICOLON .

    $default  reduce using rule 7 (program_element)


state 4

    0 $accept: program . $end

    $end  shift, and go to state 11


state 5

    1 program: program_element_list .  [$end]
    2 program_element_list: program_element_list . program_element
    4 program_element: . variable_declaration SEMICOLON
    5                | . function_declaration SEMICOLON
    6                | . function_definition
    7                | . SEMICOLON
    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   15 function_definition: . type ID PARA_OPEN PARA_CLOSE @1 BRACE_OPEN stmt_list BRACE_CLOSE
   17                    | . type ID PARA_OPEN function_parameter_list PARA_CLOSE @2 BRACE_OPEN stmt_list BRACE_CLOSE
   18 function_declaration: . type ID PARA_OPEN PARA_CLOSE
   19                     | . type ID PARA_OPEN function_parameter_list PARA_CLOSE

    INT        shift, and go to state 1
    VOID       shift, and go to state 2
    SEMICOLON  shift, and go to state 3

    $default  reduce using rule 1 (program)

    program_element       go to state 12
    type                  go to state 7
    variable_declaration  go to state 8
    function_definition   go to state 9
    function_declaration  go to state 10


state 6

    3 program_element_list: program_element .

    $default  reduce using rule 3 (program_element_list)


state 7

   11 variable_declaration: type . identifier_declaration
   12 identifier_declaration: . ID BRACKET_OPEN NUM BRACKET_CLOSE
   13                       | . ID
   15 function_definition: type . ID PARA_OPEN PARA_CLOSE @1 BRACE_OPEN stmt_list BRACE_CLOSE
   17                    | type . ID PARA_OPEN function_parameter_list PARA_CLOSE @2 BRACE_OPEN stmt_list BRACE_CLOSE
   18 function_declaration: type . ID PARA_OPEN PARA_CLOSE
   19                     | type . ID PARA_OPEN function_parameter_list PARA_CLOSE

    ID  shift, and go to state 13

    identifier_declaration  go to state 14


state 8

    4 program_element: variable_declaration . SEMICOLON
   10 variable_declaration: variable_declaration . COMMA identifier_declaration

    COMMA      shift, and go to state 15
    SEMICOLON  shift, and go to state 16


state 9

    6 program_element: function_definition .

    $default  reduce using rule 6 (program_element)


state 10

    5 program_element: function_declaration . SEMICOLON

    SEMICOLON  shift, and go to state 17


state 11

    0 $accept: program $end .

    $default  accept


state 12

    2 program_element_list: program_element_list program_element .

    $default  reduce using rule 2 (program_element_list)


state 13

   12 identifier_declaration: ID . BRACKET_OPEN NUM BRACKET_CLOSE
   13                       | ID .  [COMMA, SEMICOLON]
   15 function_definition: type ID . PARA_OPEN PARA_CLOSE @1 BRACE_OPEN stmt_list BRACE_CLOSE
   17                    | type ID . PARA_OPEN function_parameter_list PARA_CLOSE @2 BRACE_OPEN stmt_list BRACE_CLOSE
   18 function_declaration: type ID . PARA_OPEN PARA_CLOSE
   19                     | type ID . PARA_OPEN function_parameter_list PARA_CLOSE

    PARA_OPEN     shift, and go to state 18
    BRACKET_OPEN  shift, and go to state 19

    $default  reduce using rule 13 (identifier_declaration)


state 14

   11 variable_declaration: type identifier_declaration .

    $default  reduce using rule 11 (variable_declaration)


state 15

   10 variable_declaration: variable_declaration COMMA . identifier_declaration
   12 identifier_declaration: . ID BRACKET_OPEN NUM BRACKET_CLOSE
   13                       | . ID

    ID  shift, and go to state 20

    identifier_declaration  go to state 21


state 16

    4 program_element: variable_declaration SEMICOLON .

    $default  reduce using rule 4 (program_element)


state 17

    5 program_element: function_declaration SEMICOLON .

    $default  reduce using rule 5 (program_element)


state 18

    8 type: . INT
    9     | . VOID
   15 function_definition: type ID PARA_OPEN . PARA_CLOSE @1 BRACE_OPEN stmt_list BRACE_CLOSE
   17                    | type ID PARA_OPEN . function_parameter_list PARA_CLOSE @2 BRACE_OPEN stmt_list BRACE_CLOSE
   18 function_declaration: type ID PARA_OPEN . PARA_CLOSE
   19                     | type ID PARA_OPEN . function_parameter_list PARA_CLOSE
   20 function_parameter_list: . function_parameter
   21                        | . function_parameter_list COMMA function_parameter
   22 function_parameter: . type identifier_declaration

    INT         shift, and go to state 1
    VOID        shift, and go to state 2
    PARA_CLOSE  shift, and go to state 22

    type                     go to state 23
    function_parameter_list  go to state 24
    function_parameter       go to state 25


state 19

   12 identifier_declaration: ID BRACKET_OPEN . NUM BRACKET_CLOSE

    NUM  shift, and go to state 26


state 20

   12 identifier_declaration: ID . BRACKET_OPEN NUM BRACKET_CLOSE
   13                       | ID .  [COMMA, SEMICOLON, PARA_CLOSE]

    BRACKET_OPEN  shift, and go to state 19

    $default  reduce using rule 13 (identifier_declaration)


state 21

   10 variable_declaration: variable_declaration COMMA identifier_declaration .

    $default  reduce using rule 10 (variable_declaration)


state 22

   14 @1: .  [BRACE_OPEN]
   15 function_definition: type ID PARA_OPEN PARA_CLOSE . @1 BRACE_OPEN stmt_list BRACE_CLOSE
   18 function_declaration: type ID PARA_OPEN PARA_CLOSE .  [SEMICOLON]

    SEMICOLON  reduce using rule 18 (function_declaration)
    $default   reduce using rule 14 (@1)

    @1  go to state 27


state 23

   12 identifier_declaration: . ID BRACKET_OPEN NUM BRACKET_CLOSE
   13                       | . ID
   22 function_parameter: type . identifier_declaration

    ID  shift, and go to state 20

    identifier_declaration  go to state 28


state 24

   17 function_definition: type ID PARA_OPEN function_parameter_list . PARA_CLOSE @2 BRACE_OPEN stmt_list BRACE_CLOSE
   19 function_declaration: type ID PARA_OPEN function_parameter_list . PARA_CLOSE
   21 function_parameter_list: function_parameter_list . COMMA function_parameter

    COMMA       shift, and go to state 29
    PARA_CLOSE  shift, and go to state 30


state 25

   20 function_parameter_list: function_parameter .

    $default  reduce using rule 20 (function_parameter_list)


state 26

   12 identifier_declaration: ID BRACKET_OPEN NUM . BRACKET_CLOSE

    BRACKET_CLOSE  shift, and go to state 31


state 27

   15 function_definition: type ID PARA_OPEN PARA_CLOSE @1 . BRACE_OPEN stmt_list BRACE_CLOSE

    BRACE_OPEN  shift, and go to state 32


state 28

   22 function_parameter: type identifier_declaration .

    $default  reduce using rule 22 (function_parameter)


state 29

    8 type: . INT
    9     | . VOID
   21 function_parameter_list: function_parameter_list COMMA . function_parameter
   22 function_parameter: . type identifier_declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    type                go to state 23
    function_parameter  go to state 33


state 30

   16 @2: .  [BRACE_OPEN]
   17 function_definition: type ID PARA_OPEN function_parameter_list PARA_CLOSE . @2 BRACE_OPEN stmt_list BRACE_CLOSE
   19 function_declaration: type ID PARA_OPEN function_parameter_list PARA_CLOSE .  [SEMICOLON]

    SEMICOLON  reduce using rule 19 (function_declaration)
    $default   reduce using rule 16 (@2)

    @2  go to state 34


state 31

   12 identifier_declaration: ID BRACKET_OPEN NUM BRACKET_CLOSE .

    $default  reduce using rule 12 (identifier_declaration)


state 32

   15 function_definition: type ID PARA_OPEN PARA_CLOSE @1 BRACE_OPEN . stmt_list BRACE_CLOSE
   23 stmt_list: .
   24          | . stmt_list stmt

    $default  reduce using rule 23 (stmt_list)

    stmt_list  go to state 35


state 33

   21 function_parameter_list: function_parameter_list COMMA function_parameter .

    $default  reduce using rule 21 (function_parameter_list)


state 34

   17 function_definition: type ID PARA_OPEN function_parameter_list PARA_CLOSE @2 . BRACE_OPEN stmt_list BRACE_CLOSE

    BRACE_OPEN  shift, and go to state 36


state 35

    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   15 function_definition: type ID PARA_OPEN PARA_CLOSE @1 BRACE_OPEN stmt_list . BRACE_CLOSE
   24 stmt_list: stmt_list . stmt
   25 stmt: . stmt_block
   26     | . variable_declaration SEMICOLON
   27     | . expression SEMICOLON
   28     | . stmt_conditional
   29     | . stmt_loop
   30     | . RETURN expression SEMICOLON
   31     | . RETURN SEMICOLON
   32     | . SEMICOLON
   33 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   35 stmt_conditional: . IF PARA_OPEN expression $@3 PARA_CLOSE stmt_conditional_r
   41 stmt_loop: . WHILE $@5 PARA_OPEN expression PARA_CLOSE $@6 stmt
   43          | . DO $@7 stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   44 expression: . expression ASSIGN expression
   45           | . expression LOGICAL_OR expression
   46           | . expression LOGICAL_AND expression
   47           | . LOGICAL_NOT expression
   48           | . expression EQ expression
   49           | . expression NE expression
   50           | . expression LS expression
   51           | . expression LSEQ expression
   52           | . expression GTEQ expression
   53           | . expression GT expression
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression MUL expression
   57           | . expression SHIFT_LEFT expression
   58           | . expression SHIFT_RIGHT expression
   59           | . MINUS expression
   60           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   61           | . PARA_OPEN expression PARA_CLOSE
   62           | . function_call
   63           | . primary
   64 primary: . NUM
   65        | . ID
   66 function_call: . ID PARA_OPEN PARA_CLOSE
   67              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           shift, and go to state 37
    WHILE        shift, and go to state 38
    IF           shift, and go to state 39
    INT          shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 40
    SEMICOLON    shift, and go to state 41
    BRACE_OPEN   shift, and go to state 42
    BRACE_CLOSE  shift, and go to state 43
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47
    PARA_OPEN    shift, and go to state 48

    type                  go to state 49
    variable_declaration  go to state 50
    stmt                  go to state 51
    stmt_block            go to state 52
    stmt_conditional      go to state 53
    stmt_loop             go to state 54
    expression            go to state 55
    primary               go to state 56
    function_call         go to state 57


state 36

   17 function_definition: type ID PARA_OPEN function_parameter_list PARA_CLOSE @2 BRACE_OPEN . stmt_list BRACE_CLOSE
   23 stmt_list: .
   24          | . stmt_list stmt

    $default  reduce using rule 23 (stmt_list)

    stmt_list  go to state 58


state 37

   42 $@7: .
   43 stmt_loop: DO . $@7 stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON

    $default  reduce using rule 42 ($@7)

    $@7  go to state 59


state 38

   39 $@5: .
   41 stmt_loop: WHILE . $@5 PARA_OPEN expression PARA_CLOSE $@6 stmt

    $default  reduce using rule 39 ($@5)

    $@5  go to state 60


state 39

   35 stmt_conditional: IF . PARA_OPEN expression $@3 PARA_CLOSE stmt_conditional_r

    PARA_OPEN  shift, and go to state 61


state 40

   30 stmt: RETURN . expression SEMICOLON
   31     | RETURN . SEMICOLON
   44 expression: . expression ASSIGN expression
   45           | . expression LOGICAL_OR expression
   46           | . expression LOGICAL_AND expression
   47           | . LOGICAL_NOT expression
   48           | . expression EQ expression
   49           | . expression NE expression
   50           | . expression LS expression
   51           | . expression LSEQ expression
   52           | . expression GTEQ expression
   53           | . expression GT expression
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression MUL expression
   57           | . expression SHIFT_LEFT expression
   58           | . expression SHIFT_RIGHT expression
   59           | . MINUS expression
   60           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   61           | . PARA_OPEN expression PARA_CLOSE
   62           | . function_call
   63           | . primary
   64 primary: . NUM
   65        | . ID
   66 function_call: . ID PARA_OPEN PARA_CLOSE
   67              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    SEMICOLON    shift, and go to state 62
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47
    PARA_OPEN    shift, and go to state 48

    expression     go to state 63
    primary        go to state 56
    function_call  go to state 57


state 41

   32 stmt: SEMICOLON .

    $default  reduce using rule 32 (stmt)


state 42

   23 stmt_list: .
   24          | . stmt_list stmt
   33 stmt_block: BRACE_OPEN . stmt_list BRACE_CLOSE

    $default  reduce using rule 23 (stmt_list)

    stmt_list  go to state 64


state 43

   15 function_definition: type ID PARA_OPEN PARA_CLOSE @1 BRACE_OPEN stmt_list BRACE_CLOSE .

    $default  reduce using rule 15 (function_definition)


state 44

   60 expression: ID . BRACKET_OPEN primary BRACKET_CLOSE
   65 primary: ID .  [COMMA, SEMICOLON, ASSIGN, LOGICAL_OR, LOGICAL_AND, NE, EQ, GT, GTEQ, LSEQ, LS, SHIFT_RIGHT, SHIFT_LEFT, MINUS, PLUS, MUL, PARA_CLOSE]
   66 function_call: ID . PARA_OPEN PARA_CLOSE
   67              | ID . PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN     shift, and go to state 65
    BRACKET_OPEN  shift, and go to state 66

    $default  reduce using rule 65 (primary)


state 45

   64 primary: NUM .

    $default  reduce using rule 64 (primary)


state 46

   44 expression: . expression ASSIGN expression
   45           | . expression LOGICAL_OR expression
   46           | . expression LOGICAL_AND expression
   47           | . LOGICAL_NOT expression
   48           | . expression EQ expression
   49           | . expression NE expression
   50           | . expression LS expression
   51           | . expression LSEQ expression
   52           | . expression GTEQ expression
   53           | . expression GT expression
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression MUL expression
   57           | . expression SHIFT_LEFT expression
   58           | . expression SHIFT_RIGHT expression
   59           | . MINUS expression
   59           | MINUS . expression
   60           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   61           | . PARA_OPEN expression PARA_CLOSE
   62           | . function_call
   63           | . primary
   64 primary: . NUM
   65        | . ID
   66 function_call: . ID PARA_OPEN PARA_CLOSE
   67              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47
    PARA_OPEN    shift, and go to state 48

    expression     go to state 67
    primary        go to state 56
    function_call  go to state 57


state 47

   44 expression: . expression ASSIGN expression
   45           | . expression LOGICAL_OR expression
   46           | . expression LOGICAL_AND expression
   47           | . LOGICAL_NOT expression
   47           | LOGICAL_NOT . expression
   48           | . expression EQ expression
   49           | . expression NE expression
   50           | . expression LS expression
   51           | . expression LSEQ expression
   52           | . expression GTEQ expression
   53           | . expression GT expression
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression MUL expression
   57           | . expression SHIFT_LEFT expression
   58           | . expression SHIFT_RIGHT expression
   59           | . MINUS expression
   60           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   61           | . PARA_OPEN expression PARA_CLOSE
   62           | . function_call
   63           | . primary
   64 primary: . NUM
   65        | . ID
   66 function_call: . ID PARA_OPEN PARA_CLOSE
   67              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47
    PARA_OPEN    shift, and go to state 48

    expression     go to state 68
    primary        go to state 56
    function_call  go to state 57


state 48

   44 expression: . expression ASSIGN expression
   45           | . expression LOGICAL_OR expression
   46           | . expression LOGICAL_AND expression
   47           | . LOGICAL_NOT expression
   48           | . expression EQ expression
   49           | . expression NE expression
   50           | . expression LS expression
   51           | . expression LSEQ expression
   52           | . expression GTEQ expression
   53           | . expression GT expression
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression MUL expression
   57           | . expression SHIFT_LEFT expression
   58           | . expression SHIFT_RIGHT expression
   59           | . MINUS expression
   60           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   61           | . PARA_OPEN expression PARA_CLOSE
   61           | PARA_OPEN . expression PARA_CLOSE
   62           | . function_call
   63           | . primary
   64 primary: . NUM
   65        | . ID
   66 function_call: . ID PARA_OPEN PARA_CLOSE
   67              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47
    PARA_OPEN    shift, and go to state 48

    expression     go to state 69
    primary        go to state 56
    function_call  go to state 57


state 49

   11 variable_declaration: type . identifier_declaration
   12 identifier_declaration: . ID BRACKET_OPEN NUM BRACKET_CLOSE
   13                       | . ID

    ID  shift, and go to state 20

    identifier_declaration  go to state 14


state 50

   10 variable_declaration: variable_declaration . COMMA identifier_declaration
   26 stmt: variable_declaration . SEMICOLON

    COMMA      shift, and go to state 15
    SEMICOLON  shift, and go to state 70


state 51

   24 stmt_list: stmt_list stmt .

    $default  reduce using rule 24 (stmt_list)


state 52

   25 stmt: stmt_block .

    $default  reduce using rule 25 (stmt)


state 53

   28 stmt: stmt_conditional .

    $default  reduce using rule 28 (stmt)


state 54

   29 stmt: stmt_loop .

    $default  reduce using rule 29 (stmt)


state 55

   27 stmt: expression . SEMICOLON
   44 expression: expression . ASSIGN expression
   45           | expression . LOGICAL_OR expression
   46           | expression . LOGICAL_AND expression
   48           | expression . EQ expression
   49           | expression . NE expression
   50           | expression . LS expression
   51           | expression . LSEQ expression
   52           | expression . GTEQ expression
   53           | expression . GT expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MUL expression
   57           | expression . SHIFT_LEFT expression
   58           | expression . SHIFT_RIGHT expression

    SEMICOLON    shift, and go to state 71
    ASSIGN       shift, and go to state 72
    LOGICAL_OR   shift, and go to state 73
    LOGICAL_AND  shift, and go to state 74
    NE           shift, and go to state 75
    EQ           shift, and go to state 76
    GT           shift, and go to state 77
    GTEQ         shift, and go to state 78
    LSEQ         shift, and go to state 79
    LS           shift, and go to state 80
    SHIFT_RIGHT  shift, and go to state 81
    SHIFT_LEFT   shift, and go to state 82
    MINUS        shift, and go to state 83
    PLUS         shift, and go to state 84
    MUL          shift, and go to state 85


state 56

   63 expression: primary .

    $default  reduce using rule 63 (expression)


state 57

   62 expression: function_call .

    $default  reduce using rule 62 (expression)


state 58

    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   17 function_definition: type ID PARA_OPEN function_parameter_list PARA_CLOSE @2 BRACE_OPEN stmt_list . BRACE_CLOSE
   24 stmt_list: stmt_list . stmt
   25 stmt: . stmt_block
   26     | . variable_declaration SEMICOLON
   27     | . expression SEMICOLON
   28     | . stmt_conditional
   29     | . stmt_loop
   30     | . RETURN expression SEMICOLON
   31     | . RETURN SEMICOLON
   32     | . SEMICOLON
   33 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   35 stmt_conditional: . IF PARA_OPEN expression $@3 PARA_CLOSE stmt_conditional_r
   41 stmt_loop: . WHILE $@5 PARA_OPEN expression PARA_CLOSE $@6 stmt
   43          | . DO $@7 stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   44 expression: . expression ASSIGN expression
   45           | . expression LOGICAL_OR expression
   46           | . expression LOGICAL_AND expression
   47           | . LOGICAL_NOT expression
   48           | . expression EQ expression
   49           | . expression NE expression
   50           | . expression LS expression
   51           | . expression LSEQ expression
   52           | . expression GTEQ expression
   53           | . expression GT expression
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression MUL expression
   57           | . expression SHIFT_LEFT expression
   58           | . expression SHIFT_RIGHT expression
   59           | . MINUS expression
   60           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   61           | . PARA_OPEN expression PARA_CLOSE
   62           | . function_call
   63           | . primary
   64 primary: . NUM
   65        | . ID
   66 function_call: . ID PARA_OPEN PARA_CLOSE
   67              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           shift, and go to state 37
    WHILE        shift, and go to state 38
    IF           shift, and go to state 39
    INT          shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 40
    SEMICOLON    shift, and go to state 41
    BRACE_OPEN   shift, and go to state 42
    BRACE_CLOSE  shift, and go to state 86
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47
    PARA_OPEN    shift, and go to state 48

    type                  go to state 49
    variable_declaration  go to state 50
    stmt                  go to state 51
    stmt_block            go to state 52
    stmt_conditional      go to state 53
    stmt_loop             go to state 54
    expression            go to state 55
    primary               go to state 56
    function_call         go to state 57


state 59

    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   25 stmt: . stmt_block
   26     | . variable_declaration SEMICOLON
   27     | . expression SEMICOLON
   28     | . stmt_conditional
   29     | . stmt_loop
   30     | . RETURN expression SEMICOLON
   31     | . RETURN SEMICOLON
   32     | . SEMICOLON
   33 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   35 stmt_conditional: . IF PARA_OPEN expression $@3 PARA_CLOSE stmt_conditional_r
   41 stmt_loop: . WHILE $@5 PARA_OPEN expression PARA_CLOSE $@6 stmt
   43          | . DO $@7 stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   43          | DO $@7 . stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   44 expression: . expression ASSIGN expression
   45           | . expression LOGICAL_OR expression
   46           | . expression LOGICAL_AND expression
   47           | . LOGICAL_NOT expression
   48           | . expression EQ expression
   49           | . expression NE expression
   50           | . expression LS expression
   51           | . expression LSEQ expression
   52           | . expression GTEQ expression
   53           | . expression GT expression
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression MUL expression
   57           | . expression SHIFT_LEFT expression
   58           | . expression SHIFT_RIGHT expression
   59           | . MINUS expression
   60           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   61           | . PARA_OPEN expression PARA_CLOSE
   62           | . function_call
   63           | . primary
   64 primary: . NUM
   65        | . ID
   66 function_call: . ID PARA_OPEN PARA_CLOSE
   67              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           shift, and go to state 37
    WHILE        shift, and go to state 38
    IF           shift, and go to state 39
    INT          shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 40
    SEMICOLON    shift, and go to state 41
    BRACE_OPEN   shift, and go to state 42
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47
    PARA_OPEN    shift, and go to state 48

    type                  go to state 49
    variable_declaration  go to state 50
    stmt                  go to state 87
    stmt_block            go to state 52
    stmt_conditional      go to state 53
    stmt_loop             go to state 54
    expression            go to state 55
    primary               go to state 56
    function_call         go to state 57


state 60

   41 stmt_loop: WHILE $@5 . PARA_OPEN expression PARA_CLOSE $@6 stmt

    PARA_OPEN  shift, and go to state 88


state 61

   35 stmt_conditional: IF PARA_OPEN . expression $@3 PARA_CLOSE stmt_conditional_r
   44 expression: . expression ASSIGN expression
   45           | . expression LOGICAL_OR expression
   46           | . expression LOGICAL_AND expression
   47           | . LOGICAL_NOT expression
   48           | . expression EQ expression
   49           | . expression NE expression
   50           | . expression LS expression
   51           | . expression LSEQ expression
   52           | . expression GTEQ expression
   53           | . expression GT expression
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression MUL expression
   57           | . expression SHIFT_LEFT expression
   58           | . expression SHIFT_RIGHT expression
   59           | . MINUS expression
   60           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   61           | . PARA_OPEN expression PARA_CLOSE
   62           | . function_call
   63           | . primary
   64 primary: . NUM
   65        | . ID
   66 function_call: . ID PARA_OPEN PARA_CLOSE
   67              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47
    PARA_OPEN    shift, and go to state 48

    expression     go to state 89
    primary        go to state 56
    function_call  go to state 57


state 62

   31 stmt: RETURN SEMICOLON .

    $default  reduce using rule 31 (stmt)


state 63

   30 stmt: RETURN expression . SEMICOLON
   44 expression: expression . ASSIGN expression
   45           | expression . LOGICAL_OR expression
   46           | expression . LOGICAL_AND expression
   48           | expression . EQ expression
   49           | expression . NE expression
   50           | expression . LS expression
   51           | expression . LSEQ expression
   52           | expression . GTEQ expression
   53           | expression . GT expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MUL expression
   57           | expression . SHIFT_LEFT expression
   58           | expression . SHIFT_RIGHT expression

    SEMICOLON    shift, and go to state 90
    ASSIGN       shift, and go to state 72
    LOGICAL_OR   shift, and go to state 73
    LOGICAL_AND  shift, and go to state 74
    NE           shift, and go to state 75
    EQ           shift, and go to state 76
    GT           shift, and go to state 77
    GTEQ         shift, and go to state 78
    LSEQ         shift, and go to state 79
    LS           shift, and go to state 80
    SHIFT_RIGHT  shift, and go to state 81
    SHIFT_LEFT   shift, and go to state 82
    MINUS        shift, and go to state 83
    PLUS         shift, and go to state 84
    MUL          shift, and go to state 85


state 64

    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   24 stmt_list: stmt_list . stmt
   25 stmt: . stmt_block
   26     | . variable_declaration SEMICOLON
   27     | . expression SEMICOLON
   28     | . stmt_conditional
   29     | . stmt_loop
   30     | . RETURN expression SEMICOLON
   31     | . RETURN SEMICOLON
   32     | . SEMICOLON
   33 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   33           | BRACE_OPEN stmt_list . BRACE_CLOSE
   35 stmt_conditional: . IF PARA_OPEN expression $@3 PARA_CLOSE stmt_conditional_r
   41 stmt_loop: . WHILE $@5 PARA_OPEN expression PARA_CLOSE $@6 stmt
   43          | . DO $@7 stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   44 expression: . expression ASSIGN expression
   45           | . expression LOGICAL_OR expression
   46           | . expression LOGICAL_AND expression
   47           | . LOGICAL_NOT expression
   48           | . expression EQ expression
   49           | . expression NE expression
   50           | . expression LS expression
   51           | . expression LSEQ expression
   52           | . expression GTEQ expression
   53           | . expression GT expression
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression MUL expression
   57           | . expression SHIFT_LEFT expression
   58           | . expression SHIFT_RIGHT expression
   59           | . MINUS expression
   60           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   61           | . PARA_OPEN expression PARA_CLOSE
   62           | . function_call
   63           | . primary
   64 primary: . NUM
   65        | . ID
   66 function_call: . ID PARA_OPEN PARA_CLOSE
   67              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           shift, and go to state 37
    WHILE        shift, and go to state 38
    IF           shift, and go to state 39
    INT          shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 40
    SEMICOLON    shift, and go to state 41
    BRACE_OPEN   shift, and go to state 42
    BRACE_CLOSE  shift, and go to state 91
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47
    PARA_OPEN    shift, and go to state 48

    type                  go to state 49
    variable_declaration  go to state 50
    stmt                  go to state 51
    stmt_block            go to state 52
    stmt_conditional      go to state 53
    stmt_loop             go to state 54
    expression            go to state 55
    primary               go to state 56
    function_call         go to state 57


state 65

   44 expression: . expression ASSIGN expression
   45           | . expression LOGICAL_OR expression
   46           | . expression LOGICAL_AND expression
   47           | . LOGICAL_NOT expression
   48           | . expression EQ expression
   49           | . expression NE expression
   50           | . expression LS expression
   51           | . expression LSEQ expression
   52           | . expression GTEQ expression
   53           | . expression GT expression
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression MUL expression
   57           | . expression SHIFT_LEFT expression
   58           | . expression SHIFT_RIGHT expression
   59           | . MINUS expression
   60           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   61           | . PARA_OPEN expression PARA_CLOSE
   62           | . function_call
   63           | . primary
   64 primary: . NUM
   65        | . ID
   66 function_call: . ID PARA_OPEN PARA_CLOSE
   66              | ID PARA_OPEN . PARA_CLOSE
   67              | . ID PARA_OPEN function_call_parameters PARA_CLOSE
   67              | ID PARA_OPEN . function_call_parameters PARA_CLOSE
   68 function_call_parameters: . function_call_parameters COMMA expression
   69                         | . expression

    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47
    PARA_CLOSE   shift, and go to state 92
    PARA_OPEN    shift, and go to state 48

    expression                go to state 93
    primary                   go to state 56
    function_call             go to state 57
    function_call_parameters  go to state 94


state 66

   60 expression: ID BRACKET_OPEN . primary BRACKET_CLOSE
   64 primary: . NUM
   65        | . ID

    ID   shift, and go to state 95
    NUM  shift, and go to state 45

    primary  go to state 96


state 67

   44 expression: expression . ASSIGN expression
   45           | expression . LOGICAL_OR expression
   46           | expression . LOGICAL_AND expression
   48           | expression . EQ expression
   49           | expression . NE expression
   50           | expression . LS expression
   51           | expression . LSEQ expression
   52           | expression . GTEQ expression
   53           | expression . GT expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MUL expression
   57           | expression . SHIFT_LEFT expression
   58           | expression . SHIFT_RIGHT expression
   59           | MINUS expression .  [COMMA, SEMICOLON, ASSIGN, LOGICAL_OR, LOGICAL_AND, NE, EQ, GT, GTEQ, LSEQ, LS, SHIFT_RIGHT, SHIFT_LEFT, MINUS, PLUS, MUL, PARA_CLOSE]

    $default  reduce using rule 59 (expression)

    Conflict between rule 59 and token ASSIGN resolved as reduce (ASSIGN < UNARY_MINUS).
    Conflict between rule 59 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < UNARY_MINUS).
    Conflict between rule 59 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < UNARY_MINUS).
    Conflict between rule 59 and token NE resolved as reduce (NE < UNARY_MINUS).
    Conflict between rule 59 and token EQ resolved as reduce (EQ < UNARY_MINUS).
    Conflict between rule 59 and token GT resolved as reduce (GT < UNARY_MINUS).
    Conflict between rule 59 and token GTEQ resolved as reduce (GTEQ < UNARY_MINUS).
    Conflict between rule 59 and token LSEQ resolved as reduce (LSEQ < UNARY_MINUS).
    Conflict between rule 59 and token LS resolved as reduce (LS < UNARY_MINUS).
    Conflict between rule 59 and token SHIFT_RIGHT resolved as reduce (SHIFT_RIGHT < UNARY_MINUS).
    Conflict between rule 59 and token SHIFT_LEFT resolved as reduce (SHIFT_LEFT < UNARY_MINUS).
    Conflict between rule 59 and token MINUS resolved as reduce (MINUS < UNARY_MINUS).
    Conflict between rule 59 and token PLUS resolved as reduce (PLUS < UNARY_MINUS).
    Conflict between rule 59 and token MUL resolved as reduce (MUL < UNARY_MINUS).


state 68

   44 expression: expression . ASSIGN expression
   45           | expression . LOGICAL_OR expression
   46           | expression . LOGICAL_AND expression
   47           | LOGICAL_NOT expression .  [COMMA, SEMICOLON, ASSIGN, LOGICAL_OR, LOGICAL_AND, NE, EQ, GT, GTEQ, LSEQ, LS, SHIFT_RIGHT, SHIFT_LEFT, MINUS, PLUS, MUL, PARA_CLOSE]
   48           | expression . EQ expression
   49           | expression . NE expression
   50           | expression . LS expression
   51           | expression . LSEQ expression
   52           | expression . GTEQ expression
   53           | expression . GT expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MUL expression
   57           | expression . SHIFT_LEFT expression
   58           | expression . SHIFT_RIGHT expression

    $default  reduce using rule 47 (expression)

    Conflict between rule 47 and token ASSIGN resolved as reduce (ASSIGN < LOGICAL_NOT).
    Conflict between rule 47 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < LOGICAL_NOT).
    Conflict between rule 47 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < LOGICAL_NOT).
    Conflict between rule 47 and token NE resolved as reduce (NE < LOGICAL_NOT).
    Conflict between rule 47 and token EQ resolved as reduce (EQ < LOGICAL_NOT).
    Conflict between rule 47 and token GT resolved as reduce (GT < LOGICAL_NOT).
    Conflict between rule 47 and token GTEQ resolved as reduce (GTEQ < LOGICAL_NOT).
    Conflict between rule 47 and token LSEQ resolved as reduce (LSEQ < LOGICAL_NOT).
    Conflict between rule 47 and token LS resolved as reduce (LS < LOGICAL_NOT).
    Conflict between rule 47 and token SHIFT_RIGHT resolved as reduce (SHIFT_RIGHT < LOGICAL_NOT).
    Conflict between rule 47 and token SHIFT_LEFT resolved as reduce (SHIFT_LEFT < LOGICAL_NOT).
    Conflict between rule 47 and token MINUS resolved as reduce (MINUS < LOGICAL_NOT).
    Conflict between rule 47 and token PLUS resolved as reduce (PLUS < LOGICAL_NOT).
    Conflict between rule 47 and token MUL resolved as reduce (MUL < LOGICAL_NOT).


state 69

   44 expression: expression . ASSIGN expression
   45           | expression . LOGICAL_OR expression
   46           | expression . LOGICAL_AND expression
   48           | expression . EQ expression
   49           | expression . NE expression
   50           | expression . LS expression
   51           | expression . LSEQ expression
   52           | expression . GTEQ expression
   53           | expression . GT expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MUL expression
   57           | expression . SHIFT_LEFT expression
   58           | expression . SHIFT_RIGHT expression
   61           | PARA_OPEN expression . PARA_CLOSE

    ASSIGN       shift, and go to state 72
    LOGICAL_OR   shift, and go to state 73
    LOGICAL_AND  shift, and go to state 74
    NE           shift, and go to state 75
    EQ           shift, and go to state 76
    GT           shift, and go to state 77
    GTEQ         shift, and go to state 78
    LSEQ         shift, and go to state 79
    LS           shift, and go to state 80
    SHIFT_RIGHT  shift, and go to state 81
    SHIFT_LEFT   shift, and go to state 82
    MINUS        shift, and go to state 83
    PLUS         shift, and go to state 84
    MUL          shift, and go to state 85
    PARA_CLOSE   shift, and go to state 97


state 70

   26 stmt: variable_declaration SEMICOLON .

    $default  reduce using rule 26 (stmt)


state 71

   27 stmt: expression SEMICOLON .

    $default  reduce using rule 27 (stmt)


state 72

   44 expression: . expression ASSIGN expression
   44           | expression ASSIGN . expression
   45           | . expression LOGICAL_OR expression
   46           | . expression LOGICAL_AND expression
   47           | . LOGICAL_NOT expression
   48           | . expression EQ expression
   49           | . expression NE expression
   50           | . expression LS expression
   51           | . expression LSEQ expression
   52           | . expression GTEQ expression
   53           | . expression GT expression
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression MUL expression
   57           | . expression SHIFT_LEFT expression
   58           | . expression SHIFT_RIGHT expression
   59           | . MINUS expression
   60           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   61           | . PARA_OPEN expression PARA_CLOSE
   62           | . function_call
   63           | . primary
   64 primary: . NUM
   65        | . ID
   66 function_call: . ID PARA_OPEN PARA_CLOSE
   67              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47
    PARA_OPEN    shift, and go to state 48

    expression     go to state 98
    primary        go to state 56
    function_call  go to state 57


state 73

   44 expression: . expression ASSIGN expression
   45           | . expression LOGICAL_OR expression
   45           | expression LOGICAL_OR . expression
   46           | . expression LOGICAL_AND expression
   47           | . LOGICAL_NOT expression
   48           | . expression EQ expression
   49           | . expression NE expression
   50           | . expression LS expression
   51           | . expression LSEQ expression
   52           | . expression GTEQ expression
   53           | . expression GT expression
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression MUL expression
   57           | . expression SHIFT_LEFT expression
   58           | . expression SHIFT_RIGHT expression
   59           | . MINUS expression
   60           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   61           | . PARA_OPEN expression PARA_CLOSE
   62           | . function_call
   63           | . primary
   64 primary: . NUM
   65        | . ID
   66 function_call: . ID PARA_OPEN PARA_CLOSE
   67              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47
    PARA_OPEN    shift, and go to state 48

    expression     go to state 99
    primary        go to state 56
    function_call  go to state 57


state 74

   44 expression: . expression ASSIGN expression
   45           | . expression LOGICAL_OR expression
   46           | . expression LOGICAL_AND expression
   46           | expression LOGICAL_AND . expression
   47           | . LOGICAL_NOT expression
   48           | . expression EQ expression
   49           | . expression NE expression
   50           | . expression LS expression
   51           | . expression LSEQ expression
   52           | . expression GTEQ expression
   53           | . expression GT expression
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression MUL expression
   57           | . expression SHIFT_LEFT expression
   58           | . expression SHIFT_RIGHT expression
   59           | . MINUS expression
   60           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   61           | . PARA_OPEN expression PARA_CLOSE
   62           | . function_call
   63           | . primary
   64 primary: . NUM
   65        | . ID
   66 function_call: . ID PARA_OPEN PARA_CLOSE
   67              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47
    PARA_OPEN    shift, and go to state 48

    expression     go to state 100
    primary        go to state 56
    function_call  go to state 57


state 75

   44 expression: . expression ASSIGN expression
   45           | . expression LOGICAL_OR expression
   46           | . expression LOGICAL_AND expression
   47           | . LOGICAL_NOT expression
   48           | . expression EQ expression
   49           | . expression NE expression
   49           | expression NE . expression
   50           | . expression LS expression
   51           | . expression LSEQ expression
   52           | . expression GTEQ expression
   53           | . expression GT expression
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression MUL expression
   57           | . expression SHIFT_LEFT expression
   58           | . expression SHIFT_RIGHT expression
   59           | . MINUS expression
   60           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   61           | . PARA_OPEN expression PARA_CLOSE
   62           | . function_call
   63           | . primary
   64 primary: . NUM
   65        | . ID
   66 function_call: . ID PARA_OPEN PARA_CLOSE
   67              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47
    PARA_OPEN    shift, and go to state 48

    expression     go to state 101
    primary        go to state 56
    function_call  go to state 57


state 76

   44 expression: . expression ASSIGN expression
   45           | . expression LOGICAL_OR expression
   46           | . expression LOGICAL_AND expression
   47           | . LOGICAL_NOT expression
   48           | . expression EQ expression
   48           | expression EQ . expression
   49           | . expression NE expression
   50           | . expression LS expression
   51           | . expression LSEQ expression
   52           | . expression GTEQ expression
   53           | . expression GT expression
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression MUL expression
   57           | . expression SHIFT_LEFT expression
   58           | . expression SHIFT_RIGHT expression
   59           | . MINUS expression
   60           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   61           | . PARA_OPEN expression PARA_CLOSE
   62           | . function_call
   63           | . primary
   64 primary: . NUM
   65        | . ID
   66 function_call: . ID PARA_OPEN PARA_CLOSE
   67              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47
    PARA_OPEN    shift, and go to state 48

    expression     go to state 102
    primary        go to state 56
    function_call  go to state 57


state 77

   44 expression: . expression ASSIGN expression
   45           | . expression LOGICAL_OR expression
   46           | . expression LOGICAL_AND expression
   47           | . LOGICAL_NOT expression
   48           | . expression EQ expression
   49           | . expression NE expression
   50           | . expression LS expression
   51           | . expression LSEQ expression
   52           | . expression GTEQ expression
   53           | . expression GT expression
   53           | expression GT . expression
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression MUL expression
   57           | . expression SHIFT_LEFT expression
   58           | . expression SHIFT_RIGHT expression
   59           | . MINUS expression
   60           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   61           | . PARA_OPEN expression PARA_CLOSE
   62           | . function_call
   63           | . primary
   64 primary: . NUM
   65        | . ID
   66 function_call: . ID PARA_OPEN PARA_CLOSE
   67              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47
    PARA_OPEN    shift, and go to state 48

    expression     go to state 103
    primary        go to state 56
    function_call  go to state 57


state 78

   44 expression: . expression ASSIGN expression
   45           | . expression LOGICAL_OR expression
   46           | . expression LOGICAL_AND expression
   47           | . LOGICAL_NOT expression
   48           | . expression EQ expression
   49           | . expression NE expression
   50           | . expression LS expression
   51           | . expression LSEQ expression
   52           | . expression GTEQ expression
   52           | expression GTEQ . expression
   53           | . expression GT expression
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression MUL expression
   57           | . expression SHIFT_LEFT expression
   58           | . expression SHIFT_RIGHT expression
   59           | . MINUS expression
   60           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   61           | . PARA_OPEN expression PARA_CLOSE
   62           | . function_call
   63           | . primary
   64 primary: . NUM
   65        | . ID
   66 function_call: . ID PARA_OPEN PARA_CLOSE
   67              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47
    PARA_OPEN    shift, and go to state 48

    expression     go to state 104
    primary        go to state 56
    function_call  go to state 57


state 79

   44 expression: . expression ASSIGN expression
   45           | . expression LOGICAL_OR expression
   46           | . expression LOGICAL_AND expression
   47           | . LOGICAL_NOT expression
   48           | . expression EQ expression
   49           | . expression NE expression
   50           | . expression LS expression
   51           | . expression LSEQ expression
   51           | expression LSEQ . expression
   52           | . expression GTEQ expression
   53           | . expression GT expression
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression MUL expression
   57           | . expression SHIFT_LEFT expression
   58           | . expression SHIFT_RIGHT expression
   59           | . MINUS expression
   60           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   61           | . PARA_OPEN expression PARA_CLOSE
   62           | . function_call
   63           | . primary
   64 primary: . NUM
   65        | . ID
   66 function_call: . ID PARA_OPEN PARA_CLOSE
   67              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47
    PARA_OPEN    shift, and go to state 48

    expression     go to state 105
    primary        go to state 56
    function_call  go to state 57


state 80

   44 expression: . expression ASSIGN expression
   45           | . expression LOGICAL_OR expression
   46           | . expression LOGICAL_AND expression
   47           | . LOGICAL_NOT expression
   48           | . expression EQ expression
   49           | . expression NE expression
   50           | . expression LS expression
   50           | expression LS . expression
   51           | . expression LSEQ expression
   52           | . expression GTEQ expression
   53           | . expression GT expression
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression MUL expression
   57           | . expression SHIFT_LEFT expression
   58           | . expression SHIFT_RIGHT expression
   59           | . MINUS expression
   60           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   61           | . PARA_OPEN expression PARA_CLOSE
   62           | . function_call
   63           | . primary
   64 primary: . NUM
   65        | . ID
   66 function_call: . ID PARA_OPEN PARA_CLOSE
   67              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47
    PARA_OPEN    shift, and go to state 48

    expression     go to state 106
    primary        go to state 56
    function_call  go to state 57


state 81

   44 expression: . expression ASSIGN expression
   45           | . expression LOGICAL_OR expression
   46           | . expression LOGICAL_AND expression
   47           | . LOGICAL_NOT expression
   48           | . expression EQ expression
   49           | . expression NE expression
   50           | . expression LS expression
   51           | . expression LSEQ expression
   52           | . expression GTEQ expression
   53           | . expression GT expression
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression MUL expression
   57           | . expression SHIFT_LEFT expression
   58           | . expression SHIFT_RIGHT expression
   58           | expression SHIFT_RIGHT . expression
   59           | . MINUS expression
   60           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   61           | . PARA_OPEN expression PARA_CLOSE
   62           | . function_call
   63           | . primary
   64 primary: . NUM
   65        | . ID
   66 function_call: . ID PARA_OPEN PARA_CLOSE
   67              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47
    PARA_OPEN    shift, and go to state 48

    expression     go to state 107
    primary        go to state 56
    function_call  go to state 57


state 82

   44 expression: . expression ASSIGN expression
   45           | . expression LOGICAL_OR expression
   46           | . expression LOGICAL_AND expression
   47           | . LOGICAL_NOT expression
   48           | . expression EQ expression
   49           | . expression NE expression
   50           | . expression LS expression
   51           | . expression LSEQ expression
   52           | . expression GTEQ expression
   53           | . expression GT expression
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression MUL expression
   57           | . expression SHIFT_LEFT expression
   57           | expression SHIFT_LEFT . expression
   58           | . expression SHIFT_RIGHT expression
   59           | . MINUS expression
   60           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   61           | . PARA_OPEN expression PARA_CLOSE
   62           | . function_call
   63           | . primary
   64 primary: . NUM
   65        | . ID
   66 function_call: . ID PARA_OPEN PARA_CLOSE
   67              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47
    PARA_OPEN    shift, and go to state 48

    expression     go to state 108
    primary        go to state 56
    function_call  go to state 57


state 83

   44 expression: . expression ASSIGN expression
   45           | . expression LOGICAL_OR expression
   46           | . expression LOGICAL_AND expression
   47           | . LOGICAL_NOT expression
   48           | . expression EQ expression
   49           | . expression NE expression
   50           | . expression LS expression
   51           | . expression LSEQ expression
   52           | . expression GTEQ expression
   53           | . expression GT expression
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   55           | expression MINUS . expression
   56           | . expression MUL expression
   57           | . expression SHIFT_LEFT expression
   58           | . expression SHIFT_RIGHT expression
   59           | . MINUS expression
   60           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   61           | . PARA_OPEN expression PARA_CLOSE
   62           | . function_call
   63           | . primary
   64 primary: . NUM
   65        | . ID
   66 function_call: . ID PARA_OPEN PARA_CLOSE
   67              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47
    PARA_OPEN    shift, and go to state 48

    expression     go to state 109
    primary        go to state 56
    function_call  go to state 57


state 84

   44 expression: . expression ASSIGN expression
   45           | . expression LOGICAL_OR expression
   46           | . expression LOGICAL_AND expression
   47           | . LOGICAL_NOT expression
   48           | . expression EQ expression
   49           | . expression NE expression
   50           | . expression LS expression
   51           | . expression LSEQ expression
   52           | . expression GTEQ expression
   53           | . expression GT expression
   54           | . expression PLUS expression
   54           | expression PLUS . expression
   55           | . expression MINUS expression
   56           | . expression MUL expression
   57           | . expression SHIFT_LEFT expression
   58           | . expression SHIFT_RIGHT expression
   59           | . MINUS expression
   60           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   61           | . PARA_OPEN expression PARA_CLOSE
   62           | . function_call
   63           | . primary
   64 primary: . NUM
   65        | . ID
   66 function_call: . ID PARA_OPEN PARA_CLOSE
   67              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47
    PARA_OPEN    shift, and go to state 48

    expression     go to state 110
    primary        go to state 56
    function_call  go to state 57


state 85

   44 expression: . expression ASSIGN expression
   45           | . expression LOGICAL_OR expression
   46           | . expression LOGICAL_AND expression
   47           | . LOGICAL_NOT expression
   48           | . expression EQ expression
   49           | . expression NE expression
   50           | . expression LS expression
   51           | . expression LSEQ expression
   52           | . expression GTEQ expression
   53           | . expression GT expression
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression MUL expression
   56           | expression MUL . expression
   57           | . expression SHIFT_LEFT expression
   58           | . expression SHIFT_RIGHT expression
   59           | . MINUS expression
   60           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   61           | . PARA_OPEN expression PARA_CLOSE
   62           | . function_call
   63           | . primary
   64 primary: . NUM
   65        | . ID
   66 function_call: . ID PARA_OPEN PARA_CLOSE
   67              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47
    PARA_OPEN    shift, and go to state 48

    expression     go to state 111
    primary        go to state 56
    function_call  go to state 57


state 86

   17 function_definition: type ID PARA_OPEN function_parameter_list PARA_CLOSE @2 BRACE_OPEN stmt_list BRACE_CLOSE .

    $default  reduce using rule 17 (function_definition)


state 87

   43 stmt_loop: DO $@7 stmt . WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON

    WHILE  shift, and go to state 112


state 88

   41 stmt_loop: WHILE $@5 PARA_OPEN . expression PARA_CLOSE $@6 stmt
   44 expression: . expression ASSIGN expression
   45           | . expression LOGICAL_OR expression
   46           | . expression LOGICAL_AND expression
   47           | . LOGICAL_NOT expression
   48           | . expression EQ expression
   49           | . expression NE expression
   50           | . expression LS expression
   51           | . expression LSEQ expression
   52           | . expression GTEQ expression
   53           | . expression GT expression
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression MUL expression
   57           | . expression SHIFT_LEFT expression
   58           | . expression SHIFT_RIGHT expression
   59           | . MINUS expression
   60           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   61           | . PARA_OPEN expression PARA_CLOSE
   62           | . function_call
   63           | . primary
   64 primary: . NUM
   65        | . ID
   66 function_call: . ID PARA_OPEN PARA_CLOSE
   67              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47
    PARA_OPEN    shift, and go to state 48

    expression     go to state 113
    primary        go to state 56
    function_call  go to state 57


state 89

   34 $@3: .  [PARA_CLOSE]
   35 stmt_conditional: IF PARA_OPEN expression . $@3 PARA_CLOSE stmt_conditional_r
   44 expression: expression . ASSIGN expression
   45           | expression . LOGICAL_OR expression
   46           | expression . LOGICAL_AND expression
   48           | expression . EQ expression
   49           | expression . NE expression
   50           | expression . LS expression
   51           | expression . LSEQ expression
   52           | expression . GTEQ expression
   53           | expression . GT expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MUL expression
   57           | expression . SHIFT_LEFT expression
   58           | expression . SHIFT_RIGHT expression

    ASSIGN       shift, and go to state 72
    LOGICAL_OR   shift, and go to state 73
    LOGICAL_AND  shift, and go to state 74
    NE           shift, and go to state 75
    EQ           shift, and go to state 76
    GT           shift, and go to state 77
    GTEQ         shift, and go to state 78
    LSEQ         shift, and go to state 79
    LS           shift, and go to state 80
    SHIFT_RIGHT  shift, and go to state 81
    SHIFT_LEFT   shift, and go to state 82
    MINUS        shift, and go to state 83
    PLUS         shift, and go to state 84
    MUL          shift, and go to state 85

    $default  reduce using rule 34 ($@3)

    $@3  go to state 114


state 90

   30 stmt: RETURN expression SEMICOLON .

    $default  reduce using rule 30 (stmt)


state 91

   33 stmt_block: BRACE_OPEN stmt_list BRACE_CLOSE .

    $default  reduce using rule 33 (stmt_block)


state 92

   66 function_call: ID PARA_OPEN PARA_CLOSE .

    $default  reduce using rule 66 (function_call)


state 93

   44 expression: expression . ASSIGN expression
   45           | expression . LOGICAL_OR expression
   46           | expression . LOGICAL_AND expression
   48           | expression . EQ expression
   49           | expression . NE expression
   50           | expression . LS expression
   51           | expression . LSEQ expression
   52           | expression . GTEQ expression
   53           | expression . GT expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MUL expression
   57           | expression . SHIFT_LEFT expression
   58           | expression . SHIFT_RIGHT expression
   69 function_call_parameters: expression .  [COMMA, PARA_CLOSE]

    ASSIGN       shift, and go to state 72
    LOGICAL_OR   shift, and go to state 73
    LOGICAL_AND  shift, and go to state 74
    NE           shift, and go to state 75
    EQ           shift, and go to state 76
    GT           shift, and go to state 77
    GTEQ         shift, and go to state 78
    LSEQ         shift, and go to state 79
    LS           shift, and go to state 80
    SHIFT_RIGHT  shift, and go to state 81
    SHIFT_LEFT   shift, and go to state 82
    MINUS        shift, and go to state 83
    PLUS         shift, and go to state 84
    MUL          shift, and go to state 85

    $default  reduce using rule 69 (function_call_parameters)


state 94

   67 function_call: ID PARA_OPEN function_call_parameters . PARA_CLOSE
   68 function_call_parameters: function_call_parameters . COMMA expression

    COMMA       shift, and go to state 115
    PARA_CLOSE  shift, and go to state 116


state 95

   65 primary: ID .

    $default  reduce using rule 65 (primary)


state 96

   60 expression: ID BRACKET_OPEN primary . BRACKET_CLOSE

    BRACKET_CLOSE  shift, and go to state 117


state 97

   61 expression: PARA_OPEN expression PARA_CLOSE .

    $default  reduce using rule 61 (expression)


state 98

   44 expression: expression . ASSIGN expression
   44           | expression ASSIGN expression .  [COMMA, SEMICOLON, PARA_CLOSE]
   45           | expression . LOGICAL_OR expression
   46           | expression . LOGICAL_AND expression
   48           | expression . EQ expression
   49           | expression . NE expression
   50           | expression . LS expression
   51           | expression . LSEQ expression
   52           | expression . GTEQ expression
   53           | expression . GT expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MUL expression
   57           | expression . SHIFT_LEFT expression
   58           | expression . SHIFT_RIGHT expression

    ASSIGN       shift, and go to state 72
    LOGICAL_OR   shift, and go to state 73
    LOGICAL_AND  shift, and go to state 74
    NE           shift, and go to state 75
    EQ           shift, and go to state 76
    GT           shift, and go to state 77
    GTEQ         shift, and go to state 78
    LSEQ         shift, and go to state 79
    LS           shift, and go to state 80
    SHIFT_RIGHT  shift, and go to state 81
    SHIFT_LEFT   shift, and go to state 82
    MINUS        shift, and go to state 83
    PLUS         shift, and go to state 84
    MUL          shift, and go to state 85

    $default  reduce using rule 44 (expression)

    Conflict between rule 44 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 44 and token LOGICAL_OR resolved as shift (ASSIGN < LOGICAL_OR).
    Conflict between rule 44 and token LOGICAL_AND resolved as shift (ASSIGN < LOGICAL_AND).
    Conflict between rule 44 and token NE resolved as shift (ASSIGN < NE).
    Conflict between rule 44 and token EQ resolved as shift (ASSIGN < EQ).
    Conflict between rule 44 and token GT resolved as shift (ASSIGN < GT).
    Conflict between rule 44 and token GTEQ resolved as shift (ASSIGN < GTEQ).
    Conflict between rule 44 and token LSEQ resolved as shift (ASSIGN < LSEQ).
    Conflict between rule 44 and token LS resolved as shift (ASSIGN < LS).
    Conflict between rule 44 and token SHIFT_RIGHT resolved as shift (ASSIGN < SHIFT_RIGHT).
    Conflict between rule 44 and token SHIFT_LEFT resolved as shift (ASSIGN < SHIFT_LEFT).
    Conflict between rule 44 and token MINUS resolved as shift (ASSIGN < MINUS).
    Conflict between rule 44 and token PLUS resolved as shift (ASSIGN < PLUS).
    Conflict between rule 44 and token MUL resolved as shift (ASSIGN < MUL).


state 99

   44 expression: expression . ASSIGN expression
   45           | expression . LOGICAL_OR expression
   45           | expression LOGICAL_OR expression .  [COMMA, SEMICOLON, ASSIGN, LOGICAL_OR, PARA_CLOSE]
   46           | expression . LOGICAL_AND expression
   48           | expression . EQ expression
   49           | expression . NE expression
   50           | expression . LS expression
   51           | expression . LSEQ expression
   52           | expression . GTEQ expression
   53           | expression . GT expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MUL expression
   57           | expression . SHIFT_LEFT expression
   58           | expression . SHIFT_RIGHT expression

    LOGICAL_AND  shift, and go to state 74
    NE           shift, and go to state 75
    EQ           shift, and go to state 76
    GT           shift, and go to state 77
    GTEQ         shift, and go to state 78
    LSEQ         shift, and go to state 79
    LS           shift, and go to state 80
    SHIFT_RIGHT  shift, and go to state 81
    SHIFT_LEFT   shift, and go to state 82
    MINUS        shift, and go to state 83
    PLUS         shift, and go to state 84
    MUL          shift, and go to state 85

    $default  reduce using rule 45 (expression)

    Conflict between rule 45 and token ASSIGN resolved as reduce (ASSIGN < LOGICAL_OR).
    Conflict between rule 45 and token LOGICAL_OR resolved as reduce (%left LOGICAL_OR).
    Conflict between rule 45 and token LOGICAL_AND resolved as shift (LOGICAL_OR < LOGICAL_AND).
    Conflict between rule 45 and token NE resolved as shift (LOGICAL_OR < NE).
    Conflict between rule 45 and token EQ resolved as shift (LOGICAL_OR < EQ).
    Conflict between rule 45 and token GT resolved as shift (LOGICAL_OR < GT).
    Conflict between rule 45 and token GTEQ resolved as shift (LOGICAL_OR < GTEQ).
    Conflict between rule 45 and token LSEQ resolved as shift (LOGICAL_OR < LSEQ).
    Conflict between rule 45 and token LS resolved as shift (LOGICAL_OR < LS).
    Conflict between rule 45 and token SHIFT_RIGHT resolved as shift (LOGICAL_OR < SHIFT_RIGHT).
    Conflict between rule 45 and token SHIFT_LEFT resolved as shift (LOGICAL_OR < SHIFT_LEFT).
    Conflict between rule 45 and token MINUS resolved as shift (LOGICAL_OR < MINUS).
    Conflict between rule 45 and token PLUS resolved as shift (LOGICAL_OR < PLUS).
    Conflict between rule 45 and token MUL resolved as shift (LOGICAL_OR < MUL).


state 100

   44 expression: expression . ASSIGN expression
   45           | expression . LOGICAL_OR expression
   46           | expression . LOGICAL_AND expression
   46           | expression LOGICAL_AND expression .  [COMMA, SEMICOLON, ASSIGN, LOGICAL_OR, LOGICAL_AND, PARA_CLOSE]
   48           | expression . EQ expression
   49           | expression . NE expression
   50           | expression . LS expression
   51           | expression . LSEQ expression
   52           | expression . GTEQ expression
   53           | expression . GT expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MUL expression
   57           | expression . SHIFT_LEFT expression
   58           | expression . SHIFT_RIGHT expression

    NE           shift, and go to state 75
    EQ           shift, and go to state 76
    GT           shift, and go to state 77
    GTEQ         shift, and go to state 78
    LSEQ         shift, and go to state 79
    LS           shift, and go to state 80
    SHIFT_RIGHT  shift, and go to state 81
    SHIFT_LEFT   shift, and go to state 82
    MINUS        shift, and go to state 83
    PLUS         shift, and go to state 84
    MUL          shift, and go to state 85

    $default  reduce using rule 46 (expression)

    Conflict between rule 46 and token ASSIGN resolved as reduce (ASSIGN < LOGICAL_AND).
    Conflict between rule 46 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < LOGICAL_AND).
    Conflict between rule 46 and token LOGICAL_AND resolved as reduce (%left LOGICAL_AND).
    Conflict between rule 46 and token NE resolved as shift (LOGICAL_AND < NE).
    Conflict between rule 46 and token EQ resolved as shift (LOGICAL_AND < EQ).
    Conflict between rule 46 and token GT resolved as shift (LOGICAL_AND < GT).
    Conflict between rule 46 and token GTEQ resolved as shift (LOGICAL_AND < GTEQ).
    Conflict between rule 46 and token LSEQ resolved as shift (LOGICAL_AND < LSEQ).
    Conflict between rule 46 and token LS resolved as shift (LOGICAL_AND < LS).
    Conflict between rule 46 and token SHIFT_RIGHT resolved as shift (LOGICAL_AND < SHIFT_RIGHT).
    Conflict between rule 46 and token SHIFT_LEFT resolved as shift (LOGICAL_AND < SHIFT_LEFT).
    Conflict between rule 46 and token MINUS resolved as shift (LOGICAL_AND < MINUS).
    Conflict between rule 46 and token PLUS resolved as shift (LOGICAL_AND < PLUS).
    Conflict between rule 46 and token MUL resolved as shift (LOGICAL_AND < MUL).


state 101

   44 expression: expression . ASSIGN expression
   45           | expression . LOGICAL_OR expression
   46           | expression . LOGICAL_AND expression
   48           | expression . EQ expression
   49           | expression . NE expression
   49           | expression NE expression .  [COMMA, SEMICOLON, ASSIGN, LOGICAL_OR, LOGICAL_AND, NE, EQ, PARA_CLOSE]
   50           | expression . LS expression
   51           | expression . LSEQ expression
   52           | expression . GTEQ expression
   53           | expression . GT expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MUL expression
   57           | expression . SHIFT_LEFT expression
   58           | expression . SHIFT_RIGHT expression

    GT           shift, and go to state 77
    GTEQ         shift, and go to state 78
    LSEQ         shift, and go to state 79
    LS           shift, and go to state 80
    SHIFT_RIGHT  shift, and go to state 81
    SHIFT_LEFT   shift, and go to state 82
    MINUS        shift, and go to state 83
    PLUS         shift, and go to state 84
    MUL          shift, and go to state 85

    $default  reduce using rule 49 (expression)

    Conflict between rule 49 and token ASSIGN resolved as reduce (ASSIGN < NE).
    Conflict between rule 49 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < NE).
    Conflict between rule 49 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < NE).
    Conflict between rule 49 and token NE resolved as reduce (%left NE).
    Conflict between rule 49 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 49 and token GT resolved as shift (NE < GT).
    Conflict between rule 49 and token GTEQ resolved as shift (NE < GTEQ).
    Conflict between rule 49 and token LSEQ resolved as shift (NE < LSEQ).
    Conflict between rule 49 and token LS resolved as shift (NE < LS).
    Conflict between rule 49 and token SHIFT_RIGHT resolved as shift (NE < SHIFT_RIGHT).
    Conflict between rule 49 and token SHIFT_LEFT resolved as shift (NE < SHIFT_LEFT).
    Conflict between rule 49 and token MINUS resolved as shift (NE < MINUS).
    Conflict between rule 49 and token PLUS resolved as shift (NE < PLUS).
    Conflict between rule 49 and token MUL resolved as shift (NE < MUL).


state 102

   44 expression: expression . ASSIGN expression
   45           | expression . LOGICAL_OR expression
   46           | expression . LOGICAL_AND expression
   48           | expression . EQ expression
   48           | expression EQ expression .  [COMMA, SEMICOLON, ASSIGN, LOGICAL_OR, LOGICAL_AND, NE, EQ, PARA_CLOSE]
   49           | expression . NE expression
   50           | expression . LS expression
   51           | expression . LSEQ expression
   52           | expression . GTEQ expression
   53           | expression . GT expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MUL expression
   57           | expression . SHIFT_LEFT expression
   58           | expression . SHIFT_RIGHT expression

    GT           shift, and go to state 77
    GTEQ         shift, and go to state 78
    LSEQ         shift, and go to state 79
    LS           shift, and go to state 80
    SHIFT_RIGHT  shift, and go to state 81
    SHIFT_LEFT   shift, and go to state 82
    MINUS        shift, and go to state 83
    PLUS         shift, and go to state 84
    MUL          shift, and go to state 85

    $default  reduce using rule 48 (expression)

    Conflict between rule 48 and token ASSIGN resolved as reduce (ASSIGN < EQ).
    Conflict between rule 48 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < EQ).
    Conflict between rule 48 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < EQ).
    Conflict between rule 48 and token NE resolved as reduce (%left NE).
    Conflict between rule 48 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 48 and token GT resolved as shift (EQ < GT).
    Conflict between rule 48 and token GTEQ resolved as shift (EQ < GTEQ).
    Conflict between rule 48 and token LSEQ resolved as shift (EQ < LSEQ).
    Conflict between rule 48 and token LS resolved as shift (EQ < LS).
    Conflict between rule 48 and token SHIFT_RIGHT resolved as shift (EQ < SHIFT_RIGHT).
    Conflict between rule 48 and token SHIFT_LEFT resolved as shift (EQ < SHIFT_LEFT).
    Conflict between rule 48 and token MINUS resolved as shift (EQ < MINUS).
    Conflict between rule 48 and token PLUS resolved as shift (EQ < PLUS).
    Conflict between rule 48 and token MUL resolved as shift (EQ < MUL).


state 103

   44 expression: expression . ASSIGN expression
   45           | expression . LOGICAL_OR expression
   46           | expression . LOGICAL_AND expression
   48           | expression . EQ expression
   49           | expression . NE expression
   50           | expression . LS expression
   51           | expression . LSEQ expression
   52           | expression . GTEQ expression
   53           | expression . GT expression
   53           | expression GT expression .  [COMMA, SEMICOLON, ASSIGN, LOGICAL_OR, LOGICAL_AND, NE, EQ, GT, GTEQ, LSEQ, LS, PARA_CLOSE]
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MUL expression
   57           | expression . SHIFT_LEFT expression
   58           | expression . SHIFT_RIGHT expression

    SHIFT_RIGHT  shift, and go to state 81
    SHIFT_LEFT   shift, and go to state 82
    MINUS        shift, and go to state 83
    PLUS         shift, and go to state 84
    MUL          shift, and go to state 85

    $default  reduce using rule 53 (expression)

    Conflict between rule 53 and token ASSIGN resolved as reduce (ASSIGN < GT).
    Conflict between rule 53 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < GT).
    Conflict between rule 53 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < GT).
    Conflict between rule 53 and token NE resolved as reduce (NE < GT).
    Conflict between rule 53 and token EQ resolved as reduce (EQ < GT).
    Conflict between rule 53 and token GT resolved as reduce (%left GT).
    Conflict between rule 53 and token GTEQ resolved as reduce (%left GTEQ).
    Conflict between rule 53 and token LSEQ resolved as reduce (%left LSEQ).
    Conflict between rule 53 and token LS resolved as reduce (%left LS).
    Conflict between rule 53 and token SHIFT_RIGHT resolved as shift (GT < SHIFT_RIGHT).
    Conflict between rule 53 and token SHIFT_LEFT resolved as shift (GT < SHIFT_LEFT).
    Conflict between rule 53 and token MINUS resolved as shift (GT < MINUS).
    Conflict between rule 53 and token PLUS resolved as shift (GT < PLUS).
    Conflict between rule 53 and token MUL resolved as shift (GT < MUL).


state 104

   44 expression: expression . ASSIGN expression
   45           | expression . LOGICAL_OR expression
   46           | expression . LOGICAL_AND expression
   48           | expression . EQ expression
   49           | expression . NE expression
   50           | expression . LS expression
   51           | expression . LSEQ expression
   52           | expression . GTEQ expression
   52           | expression GTEQ expression .  [COMMA, SEMICOLON, ASSIGN, LOGICAL_OR, LOGICAL_AND, NE, EQ, GT, GTEQ, LSEQ, LS, PARA_CLOSE]
   53           | expression . GT expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MUL expression
   57           | expression . SHIFT_LEFT expression
   58           | expression . SHIFT_RIGHT expression

    SHIFT_RIGHT  shift, and go to state 81
    SHIFT_LEFT   shift, and go to state 82
    MINUS        shift, and go to state 83
    PLUS         shift, and go to state 84
    MUL          shift, and go to state 85

    $default  reduce using rule 52 (expression)

    Conflict between rule 52 and token ASSIGN resolved as reduce (ASSIGN < GTEQ).
    Conflict between rule 52 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < GTEQ).
    Conflict between rule 52 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < GTEQ).
    Conflict between rule 52 and token NE resolved as reduce (NE < GTEQ).
    Conflict between rule 52 and token EQ resolved as reduce (EQ < GTEQ).
    Conflict between rule 52 and token GT resolved as reduce (%left GT).
    Conflict between rule 52 and token GTEQ resolved as reduce (%left GTEQ).
    Conflict between rule 52 and token LSEQ resolved as reduce (%left LSEQ).
    Conflict between rule 52 and token LS resolved as reduce (%left LS).
    Conflict between rule 52 and token SHIFT_RIGHT resolved as shift (GTEQ < SHIFT_RIGHT).
    Conflict between rule 52 and token SHIFT_LEFT resolved as shift (GTEQ < SHIFT_LEFT).
    Conflict between rule 52 and token MINUS resolved as shift (GTEQ < MINUS).
    Conflict between rule 52 and token PLUS resolved as shift (GTEQ < PLUS).
    Conflict between rule 52 and token MUL resolved as shift (GTEQ < MUL).


state 105

   44 expression: expression . ASSIGN expression
   45           | expression . LOGICAL_OR expression
   46           | expression . LOGICAL_AND expression
   48           | expression . EQ expression
   49           | expression . NE expression
   50           | expression . LS expression
   51           | expression . LSEQ expression
   51           | expression LSEQ expression .  [COMMA, SEMICOLON, ASSIGN, LOGICAL_OR, LOGICAL_AND, NE, EQ, GT, GTEQ, LSEQ, LS, PARA_CLOSE]
   52           | expression . GTEQ expression
   53           | expression . GT expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MUL expression
   57           | expression . SHIFT_LEFT expression
   58           | expression . SHIFT_RIGHT expression

    SHIFT_RIGHT  shift, and go to state 81
    SHIFT_LEFT   shift, and go to state 82
    MINUS        shift, and go to state 83
    PLUS         shift, and go to state 84
    MUL          shift, and go to state 85

    $default  reduce using rule 51 (expression)

    Conflict between rule 51 and token ASSIGN resolved as reduce (ASSIGN < LSEQ).
    Conflict between rule 51 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < LSEQ).
    Conflict between rule 51 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < LSEQ).
    Conflict between rule 51 and token NE resolved as reduce (NE < LSEQ).
    Conflict between rule 51 and token EQ resolved as reduce (EQ < LSEQ).
    Conflict between rule 51 and token GT resolved as reduce (%left GT).
    Conflict between rule 51 and token GTEQ resolved as reduce (%left GTEQ).
    Conflict between rule 51 and token LSEQ resolved as reduce (%left LSEQ).
    Conflict between rule 51 and token LS resolved as reduce (%left LS).
    Conflict between rule 51 and token SHIFT_RIGHT resolved as shift (LSEQ < SHIFT_RIGHT).
    Conflict between rule 51 and token SHIFT_LEFT resolved as shift (LSEQ < SHIFT_LEFT).
    Conflict between rule 51 and token MINUS resolved as shift (LSEQ < MINUS).
    Conflict between rule 51 and token PLUS resolved as shift (LSEQ < PLUS).
    Conflict between rule 51 and token MUL resolved as shift (LSEQ < MUL).


state 106

   44 expression: expression . ASSIGN expression
   45           | expression . LOGICAL_OR expression
   46           | expression . LOGICAL_AND expression
   48           | expression . EQ expression
   49           | expression . NE expression
   50           | expression . LS expression
   50           | expression LS expression .  [COMMA, SEMICOLON, ASSIGN, LOGICAL_OR, LOGICAL_AND, NE, EQ, GT, GTEQ, LSEQ, LS, PARA_CLOSE]
   51           | expression . LSEQ expression
   52           | expression . GTEQ expression
   53           | expression . GT expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MUL expression
   57           | expression . SHIFT_LEFT expression
   58           | expression . SHIFT_RIGHT expression

    SHIFT_RIGHT  shift, and go to state 81
    SHIFT_LEFT   shift, and go to state 82
    MINUS        shift, and go to state 83
    PLUS         shift, and go to state 84
    MUL          shift, and go to state 85

    $default  reduce using rule 50 (expression)

    Conflict between rule 50 and token ASSIGN resolved as reduce (ASSIGN < LS).
    Conflict between rule 50 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < LS).
    Conflict between rule 50 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < LS).
    Conflict between rule 50 and token NE resolved as reduce (NE < LS).
    Conflict between rule 50 and token EQ resolved as reduce (EQ < LS).
    Conflict between rule 50 and token GT resolved as reduce (%left GT).
    Conflict between rule 50 and token GTEQ resolved as reduce (%left GTEQ).
    Conflict between rule 50 and token LSEQ resolved as reduce (%left LSEQ).
    Conflict between rule 50 and token LS resolved as reduce (%left LS).
    Conflict between rule 50 and token SHIFT_RIGHT resolved as shift (LS < SHIFT_RIGHT).
    Conflict between rule 50 and token SHIFT_LEFT resolved as shift (LS < SHIFT_LEFT).
    Conflict between rule 50 and token MINUS resolved as shift (LS < MINUS).
    Conflict between rule 50 and token PLUS resolved as shift (LS < PLUS).
    Conflict between rule 50 and token MUL resolved as shift (LS < MUL).


state 107

   44 expression: expression . ASSIGN expression
   45           | expression . LOGICAL_OR expression
   46           | expression . LOGICAL_AND expression
   48           | expression . EQ expression
   49           | expression . NE expression
   50           | expression . LS expression
   51           | expression . LSEQ expression
   52           | expression . GTEQ expression
   53           | expression . GT expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MUL expression
   57           | expression . SHIFT_LEFT expression
   58           | expression . SHIFT_RIGHT expression
   58           | expression SHIFT_RIGHT expression .  [COMMA, SEMICOLON, ASSIGN, LOGICAL_OR, LOGICAL_AND, NE, EQ, GT, GTEQ, LSEQ, LS, SHIFT_RIGHT, SHIFT_LEFT, PARA_CLOSE]

    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    MUL    shift, and go to state 85

    $default  reduce using rule 58 (expression)

    Conflict between rule 58 and token ASSIGN resolved as reduce (ASSIGN < SHIFT_RIGHT).
    Conflict between rule 58 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < SHIFT_RIGHT).
    Conflict between rule 58 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < SHIFT_RIGHT).
    Conflict between rule 58 and token NE resolved as reduce (NE < SHIFT_RIGHT).
    Conflict between rule 58 and token EQ resolved as reduce (EQ < SHIFT_RIGHT).
    Conflict between rule 58 and token GT resolved as reduce (GT < SHIFT_RIGHT).
    Conflict between rule 58 and token GTEQ resolved as reduce (GTEQ < SHIFT_RIGHT).
    Conflict between rule 58 and token LSEQ resolved as reduce (LSEQ < SHIFT_RIGHT).
    Conflict between rule 58 and token LS resolved as reduce (LS < SHIFT_RIGHT).
    Conflict between rule 58 and token SHIFT_RIGHT resolved as reduce (%left SHIFT_RIGHT).
    Conflict between rule 58 and token SHIFT_LEFT resolved as reduce (%left SHIFT_LEFT).
    Conflict between rule 58 and token MINUS resolved as shift (SHIFT_RIGHT < MINUS).
    Conflict between rule 58 and token PLUS resolved as shift (SHIFT_RIGHT < PLUS).
    Conflict between rule 58 and token MUL resolved as shift (SHIFT_RIGHT < MUL).


state 108

   44 expression: expression . ASSIGN expression
   45           | expression . LOGICAL_OR expression
   46           | expression . LOGICAL_AND expression
   48           | expression . EQ expression
   49           | expression . NE expression
   50           | expression . LS expression
   51           | expression . LSEQ expression
   52           | expression . GTEQ expression
   53           | expression . GT expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MUL expression
   57           | expression . SHIFT_LEFT expression
   57           | expression SHIFT_LEFT expression .  [COMMA, SEMICOLON, ASSIGN, LOGICAL_OR, LOGICAL_AND, NE, EQ, GT, GTEQ, LSEQ, LS, SHIFT_RIGHT, SHIFT_LEFT, PARA_CLOSE]
   58           | expression . SHIFT_RIGHT expression

    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    MUL    shift, and go to state 85

    $default  reduce using rule 57 (expression)

    Conflict between rule 57 and token ASSIGN resolved as reduce (ASSIGN < SHIFT_LEFT).
    Conflict between rule 57 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < SHIFT_LEFT).
    Conflict between rule 57 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < SHIFT_LEFT).
    Conflict between rule 57 and token NE resolved as reduce (NE < SHIFT_LEFT).
    Conflict between rule 57 and token EQ resolved as reduce (EQ < SHIFT_LEFT).
    Conflict between rule 57 and token GT resolved as reduce (GT < SHIFT_LEFT).
    Conflict between rule 57 and token GTEQ resolved as reduce (GTEQ < SHIFT_LEFT).
    Conflict between rule 57 and token LSEQ resolved as reduce (LSEQ < SHIFT_LEFT).
    Conflict between rule 57 and token LS resolved as reduce (LS < SHIFT_LEFT).
    Conflict between rule 57 and token SHIFT_RIGHT resolved as reduce (%left SHIFT_RIGHT).
    Conflict between rule 57 and token SHIFT_LEFT resolved as reduce (%left SHIFT_LEFT).
    Conflict between rule 57 and token MINUS resolved as shift (SHIFT_LEFT < MINUS).
    Conflict between rule 57 and token PLUS resolved as shift (SHIFT_LEFT < PLUS).
    Conflict between rule 57 and token MUL resolved as shift (SHIFT_LEFT < MUL).


state 109

   44 expression: expression . ASSIGN expression
   45           | expression . LOGICAL_OR expression
   46           | expression . LOGICAL_AND expression
   48           | expression . EQ expression
   49           | expression . NE expression
   50           | expression . LS expression
   51           | expression . LSEQ expression
   52           | expression . GTEQ expression
   53           | expression . GT expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   55           | expression MINUS expression .  [COMMA, SEMICOLON, ASSIGN, LOGICAL_OR, LOGICAL_AND, NE, EQ, GT, GTEQ, LSEQ, LS, SHIFT_RIGHT, SHIFT_LEFT, MINUS, PLUS, PARA_CLOSE]
   56           | expression . MUL expression
   57           | expression . SHIFT_LEFT expression
   58           | expression . SHIFT_RIGHT expression

    MUL  shift, and go to state 85

    $default  reduce using rule 55 (expression)

    Conflict between rule 55 and token ASSIGN resolved as reduce (ASSIGN < MINUS).
    Conflict between rule 55 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < MINUS).
    Conflict between rule 55 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < MINUS).
    Conflict between rule 55 and token NE resolved as reduce (NE < MINUS).
    Conflict between rule 55 and token EQ resolved as reduce (EQ < MINUS).
    Conflict between rule 55 and token GT resolved as reduce (GT < MINUS).
    Conflict between rule 55 and token GTEQ resolved as reduce (GTEQ < MINUS).
    Conflict between rule 55 and token LSEQ resolved as reduce (LSEQ < MINUS).
    Conflict between rule 55 and token LS resolved as reduce (LS < MINUS).
    Conflict between rule 55 and token SHIFT_RIGHT resolved as reduce (SHIFT_RIGHT < MINUS).
    Conflict between rule 55 and token SHIFT_LEFT resolved as reduce (SHIFT_LEFT < MINUS).
    Conflict between rule 55 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 55 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 55 and token MUL resolved as shift (MINUS < MUL).


state 110

   44 expression: expression . ASSIGN expression
   45           | expression . LOGICAL_OR expression
   46           | expression . LOGICAL_AND expression
   48           | expression . EQ expression
   49           | expression . NE expression
   50           | expression . LS expression
   51           | expression . LSEQ expression
   52           | expression . GTEQ expression
   53           | expression . GT expression
   54           | expression . PLUS expression
   54           | expression PLUS expression .  [COMMA, SEMICOLON, ASSIGN, LOGICAL_OR, LOGICAL_AND, NE, EQ, GT, GTEQ, LSEQ, LS, SHIFT_RIGHT, SHIFT_LEFT, MINUS, PLUS, PARA_CLOSE]
   55           | expression . MINUS expression
   56           | expression . MUL expression
   57           | expression . SHIFT_LEFT expression
   58           | expression . SHIFT_RIGHT expression

    MUL  shift, and go to state 85

    $default  reduce using rule 54 (expression)

    Conflict between rule 54 and token ASSIGN resolved as reduce (ASSIGN < PLUS).
    Conflict between rule 54 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < PLUS).
    Conflict between rule 54 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < PLUS).
    Conflict between rule 54 and token NE resolved as reduce (NE < PLUS).
    Conflict between rule 54 and token EQ resolved as reduce (EQ < PLUS).
    Conflict between rule 54 and token GT resolved as reduce (GT < PLUS).
    Conflict between rule 54 and token GTEQ resolved as reduce (GTEQ < PLUS).
    Conflict between rule 54 and token LSEQ resolved as reduce (LSEQ < PLUS).
    Conflict between rule 54 and token LS resolved as reduce (LS < PLUS).
    Conflict between rule 54 and token SHIFT_RIGHT resolved as reduce (SHIFT_RIGHT < PLUS).
    Conflict between rule 54 and token SHIFT_LEFT resolved as reduce (SHIFT_LEFT < PLUS).
    Conflict between rule 54 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 54 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 54 and token MUL resolved as shift (PLUS < MUL).


state 111

   44 expression: expression . ASSIGN expression
   45           | expression . LOGICAL_OR expression
   46           | expression . LOGICAL_AND expression
   48           | expression . EQ expression
   49           | expression . NE expression
   50           | expression . LS expression
   51           | expression . LSEQ expression
   52           | expression . GTEQ expression
   53           | expression . GT expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MUL expression
   56           | expression MUL expression .  [COMMA, SEMICOLON, ASSIGN, LOGICAL_OR, LOGICAL_AND, NE, EQ, GT, GTEQ, LSEQ, LS, SHIFT_RIGHT, SHIFT_LEFT, MINUS, PLUS, MUL, PARA_CLOSE]
   57           | expression . SHIFT_LEFT expression
   58           | expression . SHIFT_RIGHT expression

    $default  reduce using rule 56 (expression)

    Conflict between rule 56 and token ASSIGN resolved as reduce (ASSIGN < MUL).
    Conflict between rule 56 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < MUL).
    Conflict between rule 56 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < MUL).
    Conflict between rule 56 and token NE resolved as reduce (NE < MUL).
    Conflict between rule 56 and token EQ resolved as reduce (EQ < MUL).
    Conflict between rule 56 and token GT resolved as reduce (GT < MUL).
    Conflict between rule 56 and token GTEQ resolved as reduce (GTEQ < MUL).
    Conflict between rule 56 and token LSEQ resolved as reduce (LSEQ < MUL).
    Conflict between rule 56 and token LS resolved as reduce (LS < MUL).
    Conflict between rule 56 and token SHIFT_RIGHT resolved as reduce (SHIFT_RIGHT < MUL).
    Conflict between rule 56 and token SHIFT_LEFT resolved as reduce (SHIFT_LEFT < MUL).
    Conflict between rule 56 and token MINUS resolved as reduce (MINUS < MUL).
    Conflict between rule 56 and token PLUS resolved as reduce (PLUS < MUL).
    Conflict between rule 56 and token MUL resolved as reduce (%left MUL).


state 112

   43 stmt_loop: DO $@7 stmt WHILE . PARA_OPEN expression PARA_CLOSE SEMICOLON

    PARA_OPEN  shift, and go to state 118


state 113

   41 stmt_loop: WHILE $@5 PARA_OPEN expression . PARA_CLOSE $@6 stmt
   44 expression: expression . ASSIGN expression
   45           | expression . LOGICAL_OR expression
   46           | expression . LOGICAL_AND expression
   48           | expression . EQ expression
   49           | expression . NE expression
   50           | expression . LS expression
   51           | expression . LSEQ expression
   52           | expression . GTEQ expression
   53           | expression . GT expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MUL expression
   57           | expression . SHIFT_LEFT expression
   58           | expression . SHIFT_RIGHT expression

    ASSIGN       shift, and go to state 72
    LOGICAL_OR   shift, and go to state 73
    LOGICAL_AND  shift, and go to state 74
    NE           shift, and go to state 75
    EQ           shift, and go to state 76
    GT           shift, and go to state 77
    GTEQ         shift, and go to state 78
    LSEQ         shift, and go to state 79
    LS           shift, and go to state 80
    SHIFT_RIGHT  shift, and go to state 81
    SHIFT_LEFT   shift, and go to state 82
    MINUS        shift, and go to state 83
    PLUS         shift, and go to state 84
    MUL          shift, and go to state 85
    PARA_CLOSE   shift, and go to state 119


state 114

   35 stmt_conditional: IF PARA_OPEN expression $@3 . PARA_CLOSE stmt_conditional_r

    PARA_CLOSE  shift, and go to state 120


state 115

   44 expression: . expression ASSIGN expression
   45           | . expression LOGICAL_OR expression
   46           | . expression LOGICAL_AND expression
   47           | . LOGICAL_NOT expression
   48           | . expression EQ expression
   49           | . expression NE expression
   50           | . expression LS expression
   51           | . expression LSEQ expression
   52           | . expression GTEQ expression
   53           | . expression GT expression
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression MUL expression
   57           | . expression SHIFT_LEFT expression
   58           | . expression SHIFT_RIGHT expression
   59           | . MINUS expression
   60           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   61           | . PARA_OPEN expression PARA_CLOSE
   62           | . function_call
   63           | . primary
   64 primary: . NUM
   65        | . ID
   66 function_call: . ID PARA_OPEN PARA_CLOSE
   67              | . ID PARA_OPEN function_call_parameters PARA_CLOSE
   68 function_call_parameters: function_call_parameters COMMA . expression

    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47
    PARA_OPEN    shift, and go to state 48

    expression     go to state 121
    primary        go to state 56
    function_call  go to state 57


state 116

   67 function_call: ID PARA_OPEN function_call_parameters PARA_CLOSE .

    $default  reduce using rule 67 (function_call)


state 117

   60 expression: ID BRACKET_OPEN primary BRACKET_CLOSE .

    $default  reduce using rule 60 (expression)


state 118

   43 stmt_loop: DO $@7 stmt WHILE PARA_OPEN . expression PARA_CLOSE SEMICOLON
   44 expression: . expression ASSIGN expression
   45           | . expression LOGICAL_OR expression
   46           | . expression LOGICAL_AND expression
   47           | . LOGICAL_NOT expression
   48           | . expression EQ expression
   49           | . expression NE expression
   50           | . expression LS expression
   51           | . expression LSEQ expression
   52           | . expression GTEQ expression
   53           | . expression GT expression
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression MUL expression
   57           | . expression SHIFT_LEFT expression
   58           | . expression SHIFT_RIGHT expression
   59           | . MINUS expression
   60           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   61           | . PARA_OPEN expression PARA_CLOSE
   62           | . function_call
   63           | . primary
   64 primary: . NUM
   65        | . ID
   66 function_call: . ID PARA_OPEN PARA_CLOSE
   67              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47
    PARA_OPEN    shift, and go to state 48

    expression     go to state 122
    primary        go to state 56
    function_call  go to state 57


state 119

   40 $@6: .
   41 stmt_loop: WHILE $@5 PARA_OPEN expression PARA_CLOSE . $@6 stmt

    $default  reduce using rule 40 ($@6)

    $@6  go to state 123


state 120

    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   25 stmt: . stmt_block
   26     | . variable_declaration SEMICOLON
   27     | . expression SEMICOLON
   28     | . stmt_conditional
   29     | . stmt_loop
   30     | . RETURN expression SEMICOLON
   31     | . RETURN SEMICOLON
   32     | . SEMICOLON
   33 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   35 stmt_conditional: . IF PARA_OPEN expression $@3 PARA_CLOSE stmt_conditional_r
   35                 | IF PARA_OPEN expression $@3 PARA_CLOSE . stmt_conditional_r
   36 stmt_conditional_r: . stmt
   38                   | . stmt ELSE $@4 stmt
   41 stmt_loop: . WHILE $@5 PARA_OPEN expression PARA_CLOSE $@6 stmt
   43          | . DO $@7 stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   44 expression: . expression ASSIGN expression
   45           | . expression LOGICAL_OR expression
   46           | . expression LOGICAL_AND expression
   47           | . LOGICAL_NOT expression
   48           | . expression EQ expression
   49           | . expression NE expression
   50           | . expression LS expression
   51           | . expression LSEQ expression
   52           | . expression GTEQ expression
   53           | . expression GT expression
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression MUL expression
   57           | . expression SHIFT_LEFT expression
   58           | . expression SHIFT_RIGHT expression
   59           | . MINUS expression
   60           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   61           | . PARA_OPEN expression PARA_CLOSE
   62           | . function_call
   63           | . primary
   64 primary: . NUM
   65        | . ID
   66 function_call: . ID PARA_OPEN PARA_CLOSE
   67              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           shift, and go to state 37
    WHILE        shift, and go to state 38
    IF           shift, and go to state 39
    INT          shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 40
    SEMICOLON    shift, and go to state 41
    BRACE_OPEN   shift, and go to state 42
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47
    PARA_OPEN    shift, and go to state 48

    type                  go to state 49
    variable_declaration  go to state 50
    stmt                  go to state 124
    stmt_block            go to state 52
    stmt_conditional      go to state 53
    stmt_conditional_r    go to state 125
    stmt_loop             go to state 54
    expression            go to state 55
    primary               go to state 56
    function_call         go to state 57


state 121

   44 expression: expression . ASSIGN expression
   45           | expression . LOGICAL_OR expression
   46           | expression . LOGICAL_AND expression
   48           | expression . EQ expression
   49           | expression . NE expression
   50           | expression . LS expression
   51           | expression . LSEQ expression
   52           | expression . GTEQ expression
   53           | expression . GT expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MUL expression
   57           | expression . SHIFT_LEFT expression
   58           | expression . SHIFT_RIGHT expression
   68 function_call_parameters: function_call_parameters COMMA expression .  [COMMA, PARA_CLOSE]

    ASSIGN       shift, and go to state 72
    LOGICAL_OR   shift, and go to state 73
    LOGICAL_AND  shift, and go to state 74
    NE           shift, and go to state 75
    EQ           shift, and go to state 76
    GT           shift, and go to state 77
    GTEQ         shift, and go to state 78
    LSEQ         shift, and go to state 79
    LS           shift, and go to state 80
    SHIFT_RIGHT  shift, and go to state 81
    SHIFT_LEFT   shift, and go to state 82
    MINUS        shift, and go to state 83
    PLUS         shift, and go to state 84
    MUL          shift, and go to state 85

    $default  reduce using rule 68 (function_call_parameters)


state 122

   43 stmt_loop: DO $@7 stmt WHILE PARA_OPEN expression . PARA_CLOSE SEMICOLON
   44 expression: expression . ASSIGN expression
   45           | expression . LOGICAL_OR expression
   46           | expression . LOGICAL_AND expression
   48           | expression . EQ expression
   49           | expression . NE expression
   50           | expression . LS expression
   51           | expression . LSEQ expression
   52           | expression . GTEQ expression
   53           | expression . GT expression
   54           | expression . PLUS expression
   55           | expression . MINUS expression
   56           | expression . MUL expression
   57           | expression . SHIFT_LEFT expression
   58           | expression . SHIFT_RIGHT expression

    ASSIGN       shift, and go to state 72
    LOGICAL_OR   shift, and go to state 73
    LOGICAL_AND  shift, and go to state 74
    NE           shift, and go to state 75
    EQ           shift, and go to state 76
    GT           shift, and go to state 77
    GTEQ         shift, and go to state 78
    LSEQ         shift, and go to state 79
    LS           shift, and go to state 80
    SHIFT_RIGHT  shift, and go to state 81
    SHIFT_LEFT   shift, and go to state 82
    MINUS        shift, and go to state 83
    PLUS         shift, and go to state 84
    MUL          shift, and go to state 85
    PARA_CLOSE   shift, and go to state 126


state 123

    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   25 stmt: . stmt_block
   26     | . variable_declaration SEMICOLON
   27     | . expression SEMICOLON
   28     | . stmt_conditional
   29     | . stmt_loop
   30     | . RETURN expression SEMICOLON
   31     | . RETURN SEMICOLON
   32     | . SEMICOLON
   33 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   35 stmt_conditional: . IF PARA_OPEN expression $@3 PARA_CLOSE stmt_conditional_r
   41 stmt_loop: . WHILE $@5 PARA_OPEN expression PARA_CLOSE $@6 stmt
   41          | WHILE $@5 PARA_OPEN expression PARA_CLOSE $@6 . stmt
   43          | . DO $@7 stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   44 expression: . expression ASSIGN expression
   45           | . expression LOGICAL_OR expression
   46           | . expression LOGICAL_AND expression
   47           | . LOGICAL_NOT expression
   48           | . expression EQ expression
   49           | . expression NE expression
   50           | . expression LS expression
   51           | . expression LSEQ expression
   52           | . expression GTEQ expression
   53           | . expression GT expression
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression MUL expression
   57           | . expression SHIFT_LEFT expression
   58           | . expression SHIFT_RIGHT expression
   59           | . MINUS expression
   60           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   61           | . PARA_OPEN expression PARA_CLOSE
   62           | . function_call
   63           | . primary
   64 primary: . NUM
   65        | . ID
   66 function_call: . ID PARA_OPEN PARA_CLOSE
   67              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           shift, and go to state 37
    WHILE        shift, and go to state 38
    IF           shift, and go to state 39
    INT          shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 40
    SEMICOLON    shift, and go to state 41
    BRACE_OPEN   shift, and go to state 42
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47
    PARA_OPEN    shift, and go to state 48

    type                  go to state 49
    variable_declaration  go to state 50
    stmt                  go to state 127
    stmt_block            go to state 52
    stmt_conditional      go to state 53
    stmt_loop             go to state 54
    expression            go to state 55
    primary               go to state 56
    function_call         go to state 57


state 124

   36 stmt_conditional_r: stmt .  [DO, WHILE, IF, ELSE, INT, VOID, RETURN, SEMICOLON, BRACE_OPEN, BRACE_CLOSE, ID, NUM, MINUS, LOGICAL_NOT, PARA_OPEN]
   38                   | stmt . ELSE $@4 stmt

    ELSE  shift, and go to state 128

    ELSE      [reduce using rule 36 (stmt_conditional_r)]
    $default  reduce using rule 36 (stmt_conditional_r)


state 125

   35 stmt_conditional: IF PARA_OPEN expression $@3 PARA_CLOSE stmt_conditional_r .

    $default  reduce using rule 35 (stmt_conditional)


state 126

   43 stmt_loop: DO $@7 stmt WHILE PARA_OPEN expression PARA_CLOSE . SEMICOLON

    SEMICOLON  shift, and go to state 129


state 127

   41 stmt_loop: WHILE $@5 PARA_OPEN expression PARA_CLOSE $@6 stmt .

    $default  reduce using rule 41 (stmt_loop)


state 128

   37 $@4: .
   38 stmt_conditional_r: stmt ELSE . $@4 stmt

    $default  reduce using rule 37 ($@4)

    $@4  go to state 130


state 129

   43 stmt_loop: DO $@7 stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON .

    $default  reduce using rule 43 (stmt_loop)


state 130

    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   25 stmt: . stmt_block
   26     | . variable_declaration SEMICOLON
   27     | . expression SEMICOLON
   28     | . stmt_conditional
   29     | . stmt_loop
   30     | . RETURN expression SEMICOLON
   31     | . RETURN SEMICOLON
   32     | . SEMICOLON
   33 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   35 stmt_conditional: . IF PARA_OPEN expression $@3 PARA_CLOSE stmt_conditional_r
   38 stmt_conditional_r: stmt ELSE $@4 . stmt
   41 stmt_loop: . WHILE $@5 PARA_OPEN expression PARA_CLOSE $@6 stmt
   43          | . DO $@7 stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   44 expression: . expression ASSIGN expression
   45           | . expression LOGICAL_OR expression
   46           | . expression LOGICAL_AND expression
   47           | . LOGICAL_NOT expression
   48           | . expression EQ expression
   49           | . expression NE expression
   50           | . expression LS expression
   51           | . expression LSEQ expression
   52           | . expression GTEQ expression
   53           | . expression GT expression
   54           | . expression PLUS expression
   55           | . expression MINUS expression
   56           | . expression MUL expression
   57           | . expression SHIFT_LEFT expression
   58           | . expression SHIFT_RIGHT expression
   59           | . MINUS expression
   60           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   61           | . PARA_OPEN expression PARA_CLOSE
   62           | . function_call
   63           | . primary
   64 primary: . NUM
   65        | . ID
   66 function_call: . ID PARA_OPEN PARA_CLOSE
   67              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           shift, and go to state 37
    WHILE        shift, and go to state 38
    IF           shift, and go to state 39
    INT          shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 40
    SEMICOLON    shift, and go to state 41
    BRACE_OPEN   shift, and go to state 42
    ID           shift, and go to state 44
    NUM          shift, and go to state 45
    MINUS        shift, and go to state 46
    LOGICAL_NOT  shift, and go to state 47
    PARA_OPEN    shift, and go to state 48

    type                  go to state 49
    variable_declaration  go to state 50
    stmt                  go to state 131
    stmt_block            go to state 52
    stmt_conditional      go to state 53
    stmt_loop             go to state 54
    expression            go to state 55
    primary               go to state 56
    function_call         go to state 57


state 131

   38 stmt_conditional_r: stmt ELSE $@4 stmt .

    $default  reduce using rule 38 (stmt_conditional_r)
