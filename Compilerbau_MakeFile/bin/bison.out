Terminals unused in grammar

   COLON
   SHIFT_RIGHT
   SHIFT_LEFT
   UNARY_PLUS


State 118 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: program_element_list

    2 program_element_list: program_element_list program_element
    3                     | program_element

    4 program_element: variable_declaration SEMICOLON
    5                | function_declaration SEMICOLON
    6                | function_definition
    7                | SEMICOLON

    8 type: INT
    9     | VOID

   10 variable_declaration: variable_declaration COMMA identifier_declaration
   11                     | type identifier_declaration

   12 identifier_declaration: ID BRACKET_OPEN NUM BRACKET_CLOSE
   13                       | ID

   14 function_definition: type ID PARA_OPEN PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   15                    | type ID PARA_OPEN function_parameter_list PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE

   16 function_declaration: type ID PARA_OPEN PARA_CLOSE
   17                     | type ID PARA_OPEN function_parameter_list PARA_CLOSE

   18 function_parameter_list: function_parameter
   19                        | function_parameter_list COMMA function_parameter

   20 function_parameter: type identifier_declaration

   21 stmt_list: /* empty */
   22          | stmt_list stmt

   23 stmt: stmt_block
   24     | variable_declaration SEMICOLON
   25     | expression SEMICOLON
   26     | stmt_conditional
   27     | stmt_loop
   28     | RETURN expression SEMICOLON
   29     | RETURN SEMICOLON
   30     | SEMICOLON

   31 stmt_block: BRACE_OPEN stmt_list BRACE_CLOSE

   32 $@1: /* empty */

   33 stmt_conditional: IF PARA_OPEN expression $@1 PARA_CLOSE stmt_conditional_r

   34 stmt_conditional_r: stmt

   35 $@2: /* empty */

   36 stmt_conditional_r: stmt ELSE $@2 stmt

   37 $@3: /* empty */

   38 $@4: /* empty */

   39 stmt_loop: WHILE $@3 PARA_OPEN expression PARA_CLOSE $@4 stmt

   40 $@5: /* empty */

   41 stmt_loop: DO $@5 stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON

   42 expression: expression ASSIGN expression
   43           | expression LOGICAL_OR expression
   44           | expression LOGICAL_AND expression
   45           | LOGICAL_NOT expression
   46           | expression EQ expression
   47           | expression NE expression
   48           | expression LS expression
   49           | expression LSEQ expression
   50           | expression GTEQ expression
   51           | expression GT expression
   52           | expression PLUS expression
   53           | expression MINUS expression
   54           | expression MUL expression
   55           | MINUS expression
   56           | ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | PARA_OPEN expression PARA_CLOSE
   58           | function_call
   59           | primary

   60 primary: NUM
   61        | ID

   62 function_call: ID PARA_OPEN PARA_CLOSE
   63              | ID PARA_OPEN function_call_parameters PARA_CLOSE

   64 function_call_parameters: function_call_parameters COMMA expression
   65                         | expression


Terminals, with rules where they appear

$end (0) 0
error (256)
DO (258) 41
WHILE (259) 39 41
IF (260) 33
ELSE (261) 36
INT (262) 8
VOID (263) 9
RETURN (264) 28 29
COLON (265)
COMMA (266) 10 19 64
SEMICOLON (267) 4 5 7 24 25 28 29 30 41
BRACE_OPEN (268) 14 15 31
BRACE_CLOSE (269) 14 15 31
ID (270) 12 13 14 15 16 17 56 61 62 63
NUM (271) 12 60
ASSIGN (272) 42
LOGICAL_OR (273) 43
LOGICAL_AND (274) 44
NE (275) 47
EQ (276) 46
GT (277) 51
GTEQ (278) 50
LSEQ (279) 49
LS (280) 48
SHIFT_RIGHT (281)
SHIFT_LEFT (282)
MINUS (283) 53 55
PLUS (284) 52
MUL (285) 54
UNARY_PLUS (286)
UNARY_MINUS (287)
LOGICAL_NOT (288) 45
PARA_CLOSE (289) 14 15 16 17 33 39 41 57 62 63
PARA_OPEN (290) 14 15 16 17 33 39 41 57 62 63
BRACKET_CLOSE (291) 12 56
BRACKET_OPEN (292) 12 56


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1, on right: 0
program_element_list (40)
    on left: 2 3, on right: 1 2
program_element (41)
    on left: 4 5 6 7, on right: 2 3
type (42)
    on left: 8 9, on right: 11 14 15 16 17 20
variable_declaration (43)
    on left: 10 11, on right: 4 10 24
identifier_declaration (44)
    on left: 12 13, on right: 10 11 20
function_definition (45)
    on left: 14 15, on right: 6
function_declaration (46)
    on left: 16 17, on right: 5
function_parameter_list (47)
    on left: 18 19, on right: 15 17 19
function_parameter (48)
    on left: 20, on right: 18 19
stmt_list (49)
    on left: 21 22, on right: 14 15 22 31
stmt (50)
    on left: 23 24 25 26 27 28 29 30, on right: 22 34 36 39 41
stmt_block (51)
    on left: 31, on right: 23
stmt_conditional (52)
    on left: 33, on right: 26
$@1 (53)
    on left: 32, on right: 33
stmt_conditional_r (54)
    on left: 34 36, on right: 33
$@2 (55)
    on left: 35, on right: 36
stmt_loop (56)
    on left: 39 41, on right: 27
$@3 (57)
    on left: 37, on right: 39
$@4 (58)
    on left: 38, on right: 39
$@5 (59)
    on left: 40, on right: 41
expression (60)
    on left: 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59,
    on right: 25 28 33 39 41 42 43 44 45 46 47 48 49 50 51 52 53 54
    55 57 64 65
primary (61)
    on left: 60 61, on right: 56 59
function_call (62)
    on left: 62 63, on right: 58
function_call_parameters (63)
    on left: 64 65, on right: 63 64


state 0

    0 $accept: . program $end
    1 program: . program_element_list
    2 program_element_list: . program_element_list program_element
    3                     | . program_element
    4 program_element: . variable_declaration SEMICOLON
    5                | . function_declaration SEMICOLON
    6                | . function_definition
    7                | . SEMICOLON
    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   14 function_definition: . type ID PARA_OPEN PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   15                    | . type ID PARA_OPEN function_parameter_list PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   16 function_declaration: . type ID PARA_OPEN PARA_CLOSE
   17                     | . type ID PARA_OPEN function_parameter_list PARA_CLOSE

    INT        shift, and go to state 1
    VOID       shift, and go to state 2
    SEMICOLON  shift, and go to state 3

    program               go to state 4
    program_element_list  go to state 5
    program_element       go to state 6
    type                  go to state 7
    variable_declaration  go to state 8
    function_definition   go to state 9
    function_declaration  go to state 10


state 1

    8 type: INT .

    $default  reduce using rule 8 (type)


state 2

    9 type: VOID .

    $default  reduce using rule 9 (type)


state 3

    7 program_element: SEMICOLON .

    $default  reduce using rule 7 (program_element)


state 4

    0 $accept: program . $end

    $end  shift, and go to state 11


state 5

    1 program: program_element_list .  [$end]
    2 program_element_list: program_element_list . program_element
    4 program_element: . variable_declaration SEMICOLON
    5                | . function_declaration SEMICOLON
    6                | . function_definition
    7                | . SEMICOLON
    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   14 function_definition: . type ID PARA_OPEN PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   15                    | . type ID PARA_OPEN function_parameter_list PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   16 function_declaration: . type ID PARA_OPEN PARA_CLOSE
   17                     | . type ID PARA_OPEN function_parameter_list PARA_CLOSE

    INT        shift, and go to state 1
    VOID       shift, and go to state 2
    SEMICOLON  shift, and go to state 3

    $default  reduce using rule 1 (program)

    program_element       go to state 12
    type                  go to state 7
    variable_declaration  go to state 8
    function_definition   go to state 9
    function_declaration  go to state 10


state 6

    3 program_element_list: program_element .

    $default  reduce using rule 3 (program_element_list)


state 7

   11 variable_declaration: type . identifier_declaration
   12 identifier_declaration: . ID BRACKET_OPEN NUM BRACKET_CLOSE
   13                       | . ID
   14 function_definition: type . ID PARA_OPEN PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   15                    | type . ID PARA_OPEN function_parameter_list PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   16 function_declaration: type . ID PARA_OPEN PARA_CLOSE
   17                     | type . ID PARA_OPEN function_parameter_list PARA_CLOSE

    ID  shift, and go to state 13

    identifier_declaration  go to state 14


state 8

    4 program_element: variable_declaration . SEMICOLON
   10 variable_declaration: variable_declaration . COMMA identifier_declaration

    COMMA      shift, and go to state 15
    SEMICOLON  shift, and go to state 16


state 9

    6 program_element: function_definition .

    $default  reduce using rule 6 (program_element)


state 10

    5 program_element: function_declaration . SEMICOLON

    SEMICOLON  shift, and go to state 17


state 11

    0 $accept: program $end .

    $default  accept


state 12

    2 program_element_list: program_element_list program_element .

    $default  reduce using rule 2 (program_element_list)


state 13

   12 identifier_declaration: ID . BRACKET_OPEN NUM BRACKET_CLOSE
   13                       | ID .  [COMMA, SEMICOLON]
   14 function_definition: type ID . PARA_OPEN PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   15                    | type ID . PARA_OPEN function_parameter_list PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   16 function_declaration: type ID . PARA_OPEN PARA_CLOSE
   17                     | type ID . PARA_OPEN function_parameter_list PARA_CLOSE

    PARA_OPEN     shift, and go to state 18
    BRACKET_OPEN  shift, and go to state 19

    $default  reduce using rule 13 (identifier_declaration)


state 14

   11 variable_declaration: type identifier_declaration .

    $default  reduce using rule 11 (variable_declaration)


state 15

   10 variable_declaration: variable_declaration COMMA . identifier_declaration
   12 identifier_declaration: . ID BRACKET_OPEN NUM BRACKET_CLOSE
   13                       | . ID

    ID  shift, and go to state 20

    identifier_declaration  go to state 21


state 16

    4 program_element: variable_declaration SEMICOLON .

    $default  reduce using rule 4 (program_element)


state 17

    5 program_element: function_declaration SEMICOLON .

    $default  reduce using rule 5 (program_element)


state 18

    8 type: . INT
    9     | . VOID
   14 function_definition: type ID PARA_OPEN . PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   15                    | type ID PARA_OPEN . function_parameter_list PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   16 function_declaration: type ID PARA_OPEN . PARA_CLOSE
   17                     | type ID PARA_OPEN . function_parameter_list PARA_CLOSE
   18 function_parameter_list: . function_parameter
   19                        | . function_parameter_list COMMA function_parameter
   20 function_parameter: . type identifier_declaration

    INT         shift, and go to state 1
    VOID        shift, and go to state 2
    PARA_CLOSE  shift, and go to state 22

    type                     go to state 23
    function_parameter_list  go to state 24
    function_parameter       go to state 25


state 19

   12 identifier_declaration: ID BRACKET_OPEN . NUM BRACKET_CLOSE

    NUM  shift, and go to state 26


state 20

   12 identifier_declaration: ID . BRACKET_OPEN NUM BRACKET_CLOSE
   13                       | ID .  [COMMA, SEMICOLON, PARA_CLOSE]

    BRACKET_OPEN  shift, and go to state 19

    $default  reduce using rule 13 (identifier_declaration)


state 21

   10 variable_declaration: variable_declaration COMMA identifier_declaration .

    $default  reduce using rule 10 (variable_declaration)


state 22

   14 function_definition: type ID PARA_OPEN PARA_CLOSE . BRACE_OPEN stmt_list BRACE_CLOSE
   16 function_declaration: type ID PARA_OPEN PARA_CLOSE .  [SEMICOLON]

    BRACE_OPEN  shift, and go to state 27

    $default  reduce using rule 16 (function_declaration)


state 23

   12 identifier_declaration: . ID BRACKET_OPEN NUM BRACKET_CLOSE
   13                       | . ID
   20 function_parameter: type . identifier_declaration

    ID  shift, and go to state 20

    identifier_declaration  go to state 28


state 24

   15 function_definition: type ID PARA_OPEN function_parameter_list . PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE
   17 function_declaration: type ID PARA_OPEN function_parameter_list . PARA_CLOSE
   19 function_parameter_list: function_parameter_list . COMMA function_parameter

    COMMA       shift, and go to state 29
    PARA_CLOSE  shift, and go to state 30


state 25

   18 function_parameter_list: function_parameter .

    $default  reduce using rule 18 (function_parameter_list)


state 26

   12 identifier_declaration: ID BRACKET_OPEN NUM . BRACKET_CLOSE

    BRACKET_CLOSE  shift, and go to state 31


state 27

   14 function_definition: type ID PARA_OPEN PARA_CLOSE BRACE_OPEN . stmt_list BRACE_CLOSE
   21 stmt_list: .
   22          | . stmt_list stmt

    $default  reduce using rule 21 (stmt_list)

    stmt_list  go to state 32


state 28

   20 function_parameter: type identifier_declaration .

    $default  reduce using rule 20 (function_parameter)


state 29

    8 type: . INT
    9     | . VOID
   19 function_parameter_list: function_parameter_list COMMA . function_parameter
   20 function_parameter: . type identifier_declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    type                go to state 23
    function_parameter  go to state 33


state 30

   15 function_definition: type ID PARA_OPEN function_parameter_list PARA_CLOSE . BRACE_OPEN stmt_list BRACE_CLOSE
   17 function_declaration: type ID PARA_OPEN function_parameter_list PARA_CLOSE .  [SEMICOLON]

    BRACE_OPEN  shift, and go to state 34

    $default  reduce using rule 17 (function_declaration)


state 31

   12 identifier_declaration: ID BRACKET_OPEN NUM BRACKET_CLOSE .

    $default  reduce using rule 12 (identifier_declaration)


state 32

    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   14 function_definition: type ID PARA_OPEN PARA_CLOSE BRACE_OPEN stmt_list . BRACE_CLOSE
   22 stmt_list: stmt_list . stmt
   23 stmt: . stmt_block
   24     | . variable_declaration SEMICOLON
   25     | . expression SEMICOLON
   26     | . stmt_conditional
   27     | . stmt_loop
   28     | . RETURN expression SEMICOLON
   29     | . RETURN SEMICOLON
   30     | . SEMICOLON
   31 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   33 stmt_conditional: . IF PARA_OPEN expression $@1 PARA_CLOSE stmt_conditional_r
   39 stmt_loop: . WHILE $@3 PARA_OPEN expression PARA_CLOSE $@4 stmt
   41          | . DO $@5 stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   42 expression: . expression ASSIGN expression
   43           | . expression LOGICAL_OR expression
   44           | . expression LOGICAL_AND expression
   45           | . LOGICAL_NOT expression
   46           | . expression EQ expression
   47           | . expression NE expression
   48           | . expression LS expression
   49           | . expression LSEQ expression
   50           | . expression GTEQ expression
   51           | . expression GT expression
   52           | . expression PLUS expression
   53           | . expression MINUS expression
   54           | . expression MUL expression
   55           | . MINUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           shift, and go to state 35
    WHILE        shift, and go to state 36
    IF           shift, and go to state 37
    INT          shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 38
    SEMICOLON    shift, and go to state 39
    BRACE_OPEN   shift, and go to state 40
    BRACE_CLOSE  shift, and go to state 41
    ID           shift, and go to state 42
    NUM          shift, and go to state 43
    MINUS        shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45
    PARA_OPEN    shift, and go to state 46

    type                  go to state 47
    variable_declaration  go to state 48
    stmt                  go to state 49
    stmt_block            go to state 50
    stmt_conditional      go to state 51
    stmt_loop             go to state 52
    expression            go to state 53
    primary               go to state 54
    function_call         go to state 55


state 33

   19 function_parameter_list: function_parameter_list COMMA function_parameter .

    $default  reduce using rule 19 (function_parameter_list)


state 34

   15 function_definition: type ID PARA_OPEN function_parameter_list PARA_CLOSE BRACE_OPEN . stmt_list BRACE_CLOSE
   21 stmt_list: .
   22          | . stmt_list stmt

    $default  reduce using rule 21 (stmt_list)

    stmt_list  go to state 56


state 35

   40 $@5: .
   41 stmt_loop: DO . $@5 stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON

    $default  reduce using rule 40 ($@5)

    $@5  go to state 57


state 36

   37 $@3: .
   39 stmt_loop: WHILE . $@3 PARA_OPEN expression PARA_CLOSE $@4 stmt

    $default  reduce using rule 37 ($@3)

    $@3  go to state 58


state 37

   33 stmt_conditional: IF . PARA_OPEN expression $@1 PARA_CLOSE stmt_conditional_r

    PARA_OPEN  shift, and go to state 59


state 38

   28 stmt: RETURN . expression SEMICOLON
   29     | RETURN . SEMICOLON
   42 expression: . expression ASSIGN expression
   43           | . expression LOGICAL_OR expression
   44           | . expression LOGICAL_AND expression
   45           | . LOGICAL_NOT expression
   46           | . expression EQ expression
   47           | . expression NE expression
   48           | . expression LS expression
   49           | . expression LSEQ expression
   50           | . expression GTEQ expression
   51           | . expression GT expression
   52           | . expression PLUS expression
   53           | . expression MINUS expression
   54           | . expression MUL expression
   55           | . MINUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    SEMICOLON    shift, and go to state 60
    ID           shift, and go to state 42
    NUM          shift, and go to state 43
    MINUS        shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45
    PARA_OPEN    shift, and go to state 46

    expression     go to state 61
    primary        go to state 54
    function_call  go to state 55


state 39

   30 stmt: SEMICOLON .

    $default  reduce using rule 30 (stmt)


state 40

   21 stmt_list: .
   22          | . stmt_list stmt
   31 stmt_block: BRACE_OPEN . stmt_list BRACE_CLOSE

    $default  reduce using rule 21 (stmt_list)

    stmt_list  go to state 62


state 41

   14 function_definition: type ID PARA_OPEN PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE .

    $default  reduce using rule 14 (function_definition)


state 42

   56 expression: ID . BRACKET_OPEN primary BRACKET_CLOSE
   61 primary: ID .  [COMMA, SEMICOLON, ASSIGN, LOGICAL_OR, LOGICAL_AND, NE, EQ, GT, GTEQ, LSEQ, LS, MINUS, PLUS, MUL, PARA_CLOSE]
   62 function_call: ID . PARA_OPEN PARA_CLOSE
   63              | ID . PARA_OPEN function_call_parameters PARA_CLOSE

    PARA_OPEN     shift, and go to state 63
    BRACKET_OPEN  shift, and go to state 64

    $default  reduce using rule 61 (primary)


state 43

   60 primary: NUM .

    $default  reduce using rule 60 (primary)


state 44

   42 expression: . expression ASSIGN expression
   43           | . expression LOGICAL_OR expression
   44           | . expression LOGICAL_AND expression
   45           | . LOGICAL_NOT expression
   46           | . expression EQ expression
   47           | . expression NE expression
   48           | . expression LS expression
   49           | . expression LSEQ expression
   50           | . expression GTEQ expression
   51           | . expression GT expression
   52           | . expression PLUS expression
   53           | . expression MINUS expression
   54           | . expression MUL expression
   55           | . MINUS expression
   55           | MINUS . expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 42
    NUM          shift, and go to state 43
    MINUS        shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45
    PARA_OPEN    shift, and go to state 46

    expression     go to state 65
    primary        go to state 54
    function_call  go to state 55


state 45

   42 expression: . expression ASSIGN expression
   43           | . expression LOGICAL_OR expression
   44           | . expression LOGICAL_AND expression
   45           | . LOGICAL_NOT expression
   45           | LOGICAL_NOT . expression
   46           | . expression EQ expression
   47           | . expression NE expression
   48           | . expression LS expression
   49           | . expression LSEQ expression
   50           | . expression GTEQ expression
   51           | . expression GT expression
   52           | . expression PLUS expression
   53           | . expression MINUS expression
   54           | . expression MUL expression
   55           | . MINUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 42
    NUM          shift, and go to state 43
    MINUS        shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45
    PARA_OPEN    shift, and go to state 46

    expression     go to state 66
    primary        go to state 54
    function_call  go to state 55


state 46

   42 expression: . expression ASSIGN expression
   43           | . expression LOGICAL_OR expression
   44           | . expression LOGICAL_AND expression
   45           | . LOGICAL_NOT expression
   46           | . expression EQ expression
   47           | . expression NE expression
   48           | . expression LS expression
   49           | . expression LSEQ expression
   50           | . expression GTEQ expression
   51           | . expression GT expression
   52           | . expression PLUS expression
   53           | . expression MINUS expression
   54           | . expression MUL expression
   55           | . MINUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   57           | PARA_OPEN . expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 42
    NUM          shift, and go to state 43
    MINUS        shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45
    PARA_OPEN    shift, and go to state 46

    expression     go to state 67
    primary        go to state 54
    function_call  go to state 55


state 47

   11 variable_declaration: type . identifier_declaration
   12 identifier_declaration: . ID BRACKET_OPEN NUM BRACKET_CLOSE
   13                       | . ID

    ID  shift, and go to state 20

    identifier_declaration  go to state 14


state 48

   10 variable_declaration: variable_declaration . COMMA identifier_declaration
   24 stmt: variable_declaration . SEMICOLON

    COMMA      shift, and go to state 15
    SEMICOLON  shift, and go to state 68


state 49

   22 stmt_list: stmt_list stmt .

    $default  reduce using rule 22 (stmt_list)


state 50

   23 stmt: stmt_block .

    $default  reduce using rule 23 (stmt)


state 51

   26 stmt: stmt_conditional .

    $default  reduce using rule 26 (stmt)


state 52

   27 stmt: stmt_loop .

    $default  reduce using rule 27 (stmt)


state 53

   25 stmt: expression . SEMICOLON
   42 expression: expression . ASSIGN expression
   43           | expression . LOGICAL_OR expression
   44           | expression . LOGICAL_AND expression
   46           | expression . EQ expression
   47           | expression . NE expression
   48           | expression . LS expression
   49           | expression . LSEQ expression
   50           | expression . GTEQ expression
   51           | expression . GT expression
   52           | expression . PLUS expression
   53           | expression . MINUS expression
   54           | expression . MUL expression

    SEMICOLON    shift, and go to state 69
    ASSIGN       shift, and go to state 70
    LOGICAL_OR   shift, and go to state 71
    LOGICAL_AND  shift, and go to state 72
    NE           shift, and go to state 73
    EQ           shift, and go to state 74
    GT           shift, and go to state 75
    GTEQ         shift, and go to state 76
    LSEQ         shift, and go to state 77
    LS           shift, and go to state 78
    MINUS        shift, and go to state 79
    PLUS         shift, and go to state 80
    MUL          shift, and go to state 81


state 54

   59 expression: primary .

    $default  reduce using rule 59 (expression)


state 55

   58 expression: function_call .

    $default  reduce using rule 58 (expression)


state 56

    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   15 function_definition: type ID PARA_OPEN function_parameter_list PARA_CLOSE BRACE_OPEN stmt_list . BRACE_CLOSE
   22 stmt_list: stmt_list . stmt
   23 stmt: . stmt_block
   24     | . variable_declaration SEMICOLON
   25     | . expression SEMICOLON
   26     | . stmt_conditional
   27     | . stmt_loop
   28     | . RETURN expression SEMICOLON
   29     | . RETURN SEMICOLON
   30     | . SEMICOLON
   31 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   33 stmt_conditional: . IF PARA_OPEN expression $@1 PARA_CLOSE stmt_conditional_r
   39 stmt_loop: . WHILE $@3 PARA_OPEN expression PARA_CLOSE $@4 stmt
   41          | . DO $@5 stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   42 expression: . expression ASSIGN expression
   43           | . expression LOGICAL_OR expression
   44           | . expression LOGICAL_AND expression
   45           | . LOGICAL_NOT expression
   46           | . expression EQ expression
   47           | . expression NE expression
   48           | . expression LS expression
   49           | . expression LSEQ expression
   50           | . expression GTEQ expression
   51           | . expression GT expression
   52           | . expression PLUS expression
   53           | . expression MINUS expression
   54           | . expression MUL expression
   55           | . MINUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           shift, and go to state 35
    WHILE        shift, and go to state 36
    IF           shift, and go to state 37
    INT          shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 38
    SEMICOLON    shift, and go to state 39
    BRACE_OPEN   shift, and go to state 40
    BRACE_CLOSE  shift, and go to state 82
    ID           shift, and go to state 42
    NUM          shift, and go to state 43
    MINUS        shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45
    PARA_OPEN    shift, and go to state 46

    type                  go to state 47
    variable_declaration  go to state 48
    stmt                  go to state 49
    stmt_block            go to state 50
    stmt_conditional      go to state 51
    stmt_loop             go to state 52
    expression            go to state 53
    primary               go to state 54
    function_call         go to state 55


state 57

    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   23 stmt: . stmt_block
   24     | . variable_declaration SEMICOLON
   25     | . expression SEMICOLON
   26     | . stmt_conditional
   27     | . stmt_loop
   28     | . RETURN expression SEMICOLON
   29     | . RETURN SEMICOLON
   30     | . SEMICOLON
   31 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   33 stmt_conditional: . IF PARA_OPEN expression $@1 PARA_CLOSE stmt_conditional_r
   39 stmt_loop: . WHILE $@3 PARA_OPEN expression PARA_CLOSE $@4 stmt
   41          | . DO $@5 stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   41          | DO $@5 . stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   42 expression: . expression ASSIGN expression
   43           | . expression LOGICAL_OR expression
   44           | . expression LOGICAL_AND expression
   45           | . LOGICAL_NOT expression
   46           | . expression EQ expression
   47           | . expression NE expression
   48           | . expression LS expression
   49           | . expression LSEQ expression
   50           | . expression GTEQ expression
   51           | . expression GT expression
   52           | . expression PLUS expression
   53           | . expression MINUS expression
   54           | . expression MUL expression
   55           | . MINUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           shift, and go to state 35
    WHILE        shift, and go to state 36
    IF           shift, and go to state 37
    INT          shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 38
    SEMICOLON    shift, and go to state 39
    BRACE_OPEN   shift, and go to state 40
    ID           shift, and go to state 42
    NUM          shift, and go to state 43
    MINUS        shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45
    PARA_OPEN    shift, and go to state 46

    type                  go to state 47
    variable_declaration  go to state 48
    stmt                  go to state 83
    stmt_block            go to state 50
    stmt_conditional      go to state 51
    stmt_loop             go to state 52
    expression            go to state 53
    primary               go to state 54
    function_call         go to state 55


state 58

   39 stmt_loop: WHILE $@3 . PARA_OPEN expression PARA_CLOSE $@4 stmt

    PARA_OPEN  shift, and go to state 84


state 59

   33 stmt_conditional: IF PARA_OPEN . expression $@1 PARA_CLOSE stmt_conditional_r
   42 expression: . expression ASSIGN expression
   43           | . expression LOGICAL_OR expression
   44           | . expression LOGICAL_AND expression
   45           | . LOGICAL_NOT expression
   46           | . expression EQ expression
   47           | . expression NE expression
   48           | . expression LS expression
   49           | . expression LSEQ expression
   50           | . expression GTEQ expression
   51           | . expression GT expression
   52           | . expression PLUS expression
   53           | . expression MINUS expression
   54           | . expression MUL expression
   55           | . MINUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 42
    NUM          shift, and go to state 43
    MINUS        shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45
    PARA_OPEN    shift, and go to state 46

    expression     go to state 85
    primary        go to state 54
    function_call  go to state 55


state 60

   29 stmt: RETURN SEMICOLON .

    $default  reduce using rule 29 (stmt)


state 61

   28 stmt: RETURN expression . SEMICOLON
   42 expression: expression . ASSIGN expression
   43           | expression . LOGICAL_OR expression
   44           | expression . LOGICAL_AND expression
   46           | expression . EQ expression
   47           | expression . NE expression
   48           | expression . LS expression
   49           | expression . LSEQ expression
   50           | expression . GTEQ expression
   51           | expression . GT expression
   52           | expression . PLUS expression
   53           | expression . MINUS expression
   54           | expression . MUL expression

    SEMICOLON    shift, and go to state 86
    ASSIGN       shift, and go to state 70
    LOGICAL_OR   shift, and go to state 71
    LOGICAL_AND  shift, and go to state 72
    NE           shift, and go to state 73
    EQ           shift, and go to state 74
    GT           shift, and go to state 75
    GTEQ         shift, and go to state 76
    LSEQ         shift, and go to state 77
    LS           shift, and go to state 78
    MINUS        shift, and go to state 79
    PLUS         shift, and go to state 80
    MUL          shift, and go to state 81


state 62

    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   22 stmt_list: stmt_list . stmt
   23 stmt: . stmt_block
   24     | . variable_declaration SEMICOLON
   25     | . expression SEMICOLON
   26     | . stmt_conditional
   27     | . stmt_loop
   28     | . RETURN expression SEMICOLON
   29     | . RETURN SEMICOLON
   30     | . SEMICOLON
   31 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   31           | BRACE_OPEN stmt_list . BRACE_CLOSE
   33 stmt_conditional: . IF PARA_OPEN expression $@1 PARA_CLOSE stmt_conditional_r
   39 stmt_loop: . WHILE $@3 PARA_OPEN expression PARA_CLOSE $@4 stmt
   41          | . DO $@5 stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   42 expression: . expression ASSIGN expression
   43           | . expression LOGICAL_OR expression
   44           | . expression LOGICAL_AND expression
   45           | . LOGICAL_NOT expression
   46           | . expression EQ expression
   47           | . expression NE expression
   48           | . expression LS expression
   49           | . expression LSEQ expression
   50           | . expression GTEQ expression
   51           | . expression GT expression
   52           | . expression PLUS expression
   53           | . expression MINUS expression
   54           | . expression MUL expression
   55           | . MINUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           shift, and go to state 35
    WHILE        shift, and go to state 36
    IF           shift, and go to state 37
    INT          shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 38
    SEMICOLON    shift, and go to state 39
    BRACE_OPEN   shift, and go to state 40
    BRACE_CLOSE  shift, and go to state 87
    ID           shift, and go to state 42
    NUM          shift, and go to state 43
    MINUS        shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45
    PARA_OPEN    shift, and go to state 46

    type                  go to state 47
    variable_declaration  go to state 48
    stmt                  go to state 49
    stmt_block            go to state 50
    stmt_conditional      go to state 51
    stmt_loop             go to state 52
    expression            go to state 53
    primary               go to state 54
    function_call         go to state 55


state 63

   42 expression: . expression ASSIGN expression
   43           | . expression LOGICAL_OR expression
   44           | . expression LOGICAL_AND expression
   45           | . LOGICAL_NOT expression
   46           | . expression EQ expression
   47           | . expression NE expression
   48           | . expression LS expression
   49           | . expression LSEQ expression
   50           | . expression GTEQ expression
   51           | . expression GT expression
   52           | . expression PLUS expression
   53           | . expression MINUS expression
   54           | . expression MUL expression
   55           | . MINUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   62              | ID PARA_OPEN . PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE
   63              | ID PARA_OPEN . function_call_parameters PARA_CLOSE
   64 function_call_parameters: . function_call_parameters COMMA expression
   65                         | . expression

    ID           shift, and go to state 42
    NUM          shift, and go to state 43
    MINUS        shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45
    PARA_CLOSE   shift, and go to state 88
    PARA_OPEN    shift, and go to state 46

    expression                go to state 89
    primary                   go to state 54
    function_call             go to state 55
    function_call_parameters  go to state 90


state 64

   56 expression: ID BRACKET_OPEN . primary BRACKET_CLOSE
   60 primary: . NUM
   61        | . ID

    ID   shift, and go to state 91
    NUM  shift, and go to state 43

    primary  go to state 92


state 65

   42 expression: expression . ASSIGN expression
   43           | expression . LOGICAL_OR expression
   44           | expression . LOGICAL_AND expression
   46           | expression . EQ expression
   47           | expression . NE expression
   48           | expression . LS expression
   49           | expression . LSEQ expression
   50           | expression . GTEQ expression
   51           | expression . GT expression
   52           | expression . PLUS expression
   53           | expression . MINUS expression
   54           | expression . MUL expression
   55           | MINUS expression .  [COMMA, SEMICOLON, ASSIGN, LOGICAL_OR, LOGICAL_AND, NE, EQ, GT, GTEQ, LSEQ, LS, MINUS, PLUS, MUL, PARA_CLOSE]

    $default  reduce using rule 55 (expression)

    Conflict between rule 55 and token ASSIGN resolved as reduce (ASSIGN < UNARY_MINUS).
    Conflict between rule 55 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < UNARY_MINUS).
    Conflict between rule 55 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < UNARY_MINUS).
    Conflict between rule 55 and token NE resolved as reduce (NE < UNARY_MINUS).
    Conflict between rule 55 and token EQ resolved as reduce (EQ < UNARY_MINUS).
    Conflict between rule 55 and token GT resolved as reduce (GT < UNARY_MINUS).
    Conflict between rule 55 and token GTEQ resolved as reduce (GTEQ < UNARY_MINUS).
    Conflict between rule 55 and token LSEQ resolved as reduce (LSEQ < UNARY_MINUS).
    Conflict between rule 55 and token LS resolved as reduce (LS < UNARY_MINUS).
    Conflict between rule 55 and token MINUS resolved as reduce (MINUS < UNARY_MINUS).
    Conflict between rule 55 and token PLUS resolved as reduce (PLUS < UNARY_MINUS).
    Conflict between rule 55 and token MUL resolved as reduce (MUL < UNARY_MINUS).


state 66

   42 expression: expression . ASSIGN expression
   43           | expression . LOGICAL_OR expression
   44           | expression . LOGICAL_AND expression
   45           | LOGICAL_NOT expression .  [COMMA, SEMICOLON, ASSIGN, LOGICAL_OR, LOGICAL_AND, NE, EQ, GT, GTEQ, LSEQ, LS, MINUS, PLUS, MUL, PARA_CLOSE]
   46           | expression . EQ expression
   47           | expression . NE expression
   48           | expression . LS expression
   49           | expression . LSEQ expression
   50           | expression . GTEQ expression
   51           | expression . GT expression
   52           | expression . PLUS expression
   53           | expression . MINUS expression
   54           | expression . MUL expression

    $default  reduce using rule 45 (expression)

    Conflict between rule 45 and token ASSIGN resolved as reduce (ASSIGN < LOGICAL_NOT).
    Conflict between rule 45 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < LOGICAL_NOT).
    Conflict between rule 45 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < LOGICAL_NOT).
    Conflict between rule 45 and token NE resolved as reduce (NE < LOGICAL_NOT).
    Conflict between rule 45 and token EQ resolved as reduce (EQ < LOGICAL_NOT).
    Conflict between rule 45 and token GT resolved as reduce (GT < LOGICAL_NOT).
    Conflict between rule 45 and token GTEQ resolved as reduce (GTEQ < LOGICAL_NOT).
    Conflict between rule 45 and token LSEQ resolved as reduce (LSEQ < LOGICAL_NOT).
    Conflict between rule 45 and token LS resolved as reduce (LS < LOGICAL_NOT).
    Conflict between rule 45 and token MINUS resolved as reduce (MINUS < LOGICAL_NOT).
    Conflict between rule 45 and token PLUS resolved as reduce (PLUS < LOGICAL_NOT).
    Conflict between rule 45 and token MUL resolved as reduce (MUL < LOGICAL_NOT).


state 67

   42 expression: expression . ASSIGN expression
   43           | expression . LOGICAL_OR expression
   44           | expression . LOGICAL_AND expression
   46           | expression . EQ expression
   47           | expression . NE expression
   48           | expression . LS expression
   49           | expression . LSEQ expression
   50           | expression . GTEQ expression
   51           | expression . GT expression
   52           | expression . PLUS expression
   53           | expression . MINUS expression
   54           | expression . MUL expression
   57           | PARA_OPEN expression . PARA_CLOSE

    ASSIGN       shift, and go to state 70
    LOGICAL_OR   shift, and go to state 71
    LOGICAL_AND  shift, and go to state 72
    NE           shift, and go to state 73
    EQ           shift, and go to state 74
    GT           shift, and go to state 75
    GTEQ         shift, and go to state 76
    LSEQ         shift, and go to state 77
    LS           shift, and go to state 78
    MINUS        shift, and go to state 79
    PLUS         shift, and go to state 80
    MUL          shift, and go to state 81
    PARA_CLOSE   shift, and go to state 93


state 68

   24 stmt: variable_declaration SEMICOLON .

    $default  reduce using rule 24 (stmt)


state 69

   25 stmt: expression SEMICOLON .

    $default  reduce using rule 25 (stmt)


state 70

   42 expression: . expression ASSIGN expression
   42           | expression ASSIGN . expression
   43           | . expression LOGICAL_OR expression
   44           | . expression LOGICAL_AND expression
   45           | . LOGICAL_NOT expression
   46           | . expression EQ expression
   47           | . expression NE expression
   48           | . expression LS expression
   49           | . expression LSEQ expression
   50           | . expression GTEQ expression
   51           | . expression GT expression
   52           | . expression PLUS expression
   53           | . expression MINUS expression
   54           | . expression MUL expression
   55           | . MINUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 42
    NUM          shift, and go to state 43
    MINUS        shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45
    PARA_OPEN    shift, and go to state 46

    expression     go to state 94
    primary        go to state 54
    function_call  go to state 55


state 71

   42 expression: . expression ASSIGN expression
   43           | . expression LOGICAL_OR expression
   43           | expression LOGICAL_OR . expression
   44           | . expression LOGICAL_AND expression
   45           | . LOGICAL_NOT expression
   46           | . expression EQ expression
   47           | . expression NE expression
   48           | . expression LS expression
   49           | . expression LSEQ expression
   50           | . expression GTEQ expression
   51           | . expression GT expression
   52           | . expression PLUS expression
   53           | . expression MINUS expression
   54           | . expression MUL expression
   55           | . MINUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 42
    NUM          shift, and go to state 43
    MINUS        shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45
    PARA_OPEN    shift, and go to state 46

    expression     go to state 95
    primary        go to state 54
    function_call  go to state 55


state 72

   42 expression: . expression ASSIGN expression
   43           | . expression LOGICAL_OR expression
   44           | . expression LOGICAL_AND expression
   44           | expression LOGICAL_AND . expression
   45           | . LOGICAL_NOT expression
   46           | . expression EQ expression
   47           | . expression NE expression
   48           | . expression LS expression
   49           | . expression LSEQ expression
   50           | . expression GTEQ expression
   51           | . expression GT expression
   52           | . expression PLUS expression
   53           | . expression MINUS expression
   54           | . expression MUL expression
   55           | . MINUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 42
    NUM          shift, and go to state 43
    MINUS        shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45
    PARA_OPEN    shift, and go to state 46

    expression     go to state 96
    primary        go to state 54
    function_call  go to state 55


state 73

   42 expression: . expression ASSIGN expression
   43           | . expression LOGICAL_OR expression
   44           | . expression LOGICAL_AND expression
   45           | . LOGICAL_NOT expression
   46           | . expression EQ expression
   47           | . expression NE expression
   47           | expression NE . expression
   48           | . expression LS expression
   49           | . expression LSEQ expression
   50           | . expression GTEQ expression
   51           | . expression GT expression
   52           | . expression PLUS expression
   53           | . expression MINUS expression
   54           | . expression MUL expression
   55           | . MINUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 42
    NUM          shift, and go to state 43
    MINUS        shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45
    PARA_OPEN    shift, and go to state 46

    expression     go to state 97
    primary        go to state 54
    function_call  go to state 55


state 74

   42 expression: . expression ASSIGN expression
   43           | . expression LOGICAL_OR expression
   44           | . expression LOGICAL_AND expression
   45           | . LOGICAL_NOT expression
   46           | . expression EQ expression
   46           | expression EQ . expression
   47           | . expression NE expression
   48           | . expression LS expression
   49           | . expression LSEQ expression
   50           | . expression GTEQ expression
   51           | . expression GT expression
   52           | . expression PLUS expression
   53           | . expression MINUS expression
   54           | . expression MUL expression
   55           | . MINUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 42
    NUM          shift, and go to state 43
    MINUS        shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45
    PARA_OPEN    shift, and go to state 46

    expression     go to state 98
    primary        go to state 54
    function_call  go to state 55


state 75

   42 expression: . expression ASSIGN expression
   43           | . expression LOGICAL_OR expression
   44           | . expression LOGICAL_AND expression
   45           | . LOGICAL_NOT expression
   46           | . expression EQ expression
   47           | . expression NE expression
   48           | . expression LS expression
   49           | . expression LSEQ expression
   50           | . expression GTEQ expression
   51           | . expression GT expression
   51           | expression GT . expression
   52           | . expression PLUS expression
   53           | . expression MINUS expression
   54           | . expression MUL expression
   55           | . MINUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 42
    NUM          shift, and go to state 43
    MINUS        shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45
    PARA_OPEN    shift, and go to state 46

    expression     go to state 99
    primary        go to state 54
    function_call  go to state 55


state 76

   42 expression: . expression ASSIGN expression
   43           | . expression LOGICAL_OR expression
   44           | . expression LOGICAL_AND expression
   45           | . LOGICAL_NOT expression
   46           | . expression EQ expression
   47           | . expression NE expression
   48           | . expression LS expression
   49           | . expression LSEQ expression
   50           | . expression GTEQ expression
   50           | expression GTEQ . expression
   51           | . expression GT expression
   52           | . expression PLUS expression
   53           | . expression MINUS expression
   54           | . expression MUL expression
   55           | . MINUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 42
    NUM          shift, and go to state 43
    MINUS        shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45
    PARA_OPEN    shift, and go to state 46

    expression     go to state 100
    primary        go to state 54
    function_call  go to state 55


state 77

   42 expression: . expression ASSIGN expression
   43           | . expression LOGICAL_OR expression
   44           | . expression LOGICAL_AND expression
   45           | . LOGICAL_NOT expression
   46           | . expression EQ expression
   47           | . expression NE expression
   48           | . expression LS expression
   49           | . expression LSEQ expression
   49           | expression LSEQ . expression
   50           | . expression GTEQ expression
   51           | . expression GT expression
   52           | . expression PLUS expression
   53           | . expression MINUS expression
   54           | . expression MUL expression
   55           | . MINUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 42
    NUM          shift, and go to state 43
    MINUS        shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45
    PARA_OPEN    shift, and go to state 46

    expression     go to state 101
    primary        go to state 54
    function_call  go to state 55


state 78

   42 expression: . expression ASSIGN expression
   43           | . expression LOGICAL_OR expression
   44           | . expression LOGICAL_AND expression
   45           | . LOGICAL_NOT expression
   46           | . expression EQ expression
   47           | . expression NE expression
   48           | . expression LS expression
   48           | expression LS . expression
   49           | . expression LSEQ expression
   50           | . expression GTEQ expression
   51           | . expression GT expression
   52           | . expression PLUS expression
   53           | . expression MINUS expression
   54           | . expression MUL expression
   55           | . MINUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 42
    NUM          shift, and go to state 43
    MINUS        shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45
    PARA_OPEN    shift, and go to state 46

    expression     go to state 102
    primary        go to state 54
    function_call  go to state 55


state 79

   42 expression: . expression ASSIGN expression
   43           | . expression LOGICAL_OR expression
   44           | . expression LOGICAL_AND expression
   45           | . LOGICAL_NOT expression
   46           | . expression EQ expression
   47           | . expression NE expression
   48           | . expression LS expression
   49           | . expression LSEQ expression
   50           | . expression GTEQ expression
   51           | . expression GT expression
   52           | . expression PLUS expression
   53           | . expression MINUS expression
   53           | expression MINUS . expression
   54           | . expression MUL expression
   55           | . MINUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 42
    NUM          shift, and go to state 43
    MINUS        shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45
    PARA_OPEN    shift, and go to state 46

    expression     go to state 103
    primary        go to state 54
    function_call  go to state 55


state 80

   42 expression: . expression ASSIGN expression
   43           | . expression LOGICAL_OR expression
   44           | . expression LOGICAL_AND expression
   45           | . LOGICAL_NOT expression
   46           | . expression EQ expression
   47           | . expression NE expression
   48           | . expression LS expression
   49           | . expression LSEQ expression
   50           | . expression GTEQ expression
   51           | . expression GT expression
   52           | . expression PLUS expression
   52           | expression PLUS . expression
   53           | . expression MINUS expression
   54           | . expression MUL expression
   55           | . MINUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 42
    NUM          shift, and go to state 43
    MINUS        shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45
    PARA_OPEN    shift, and go to state 46

    expression     go to state 104
    primary        go to state 54
    function_call  go to state 55


state 81

   42 expression: . expression ASSIGN expression
   43           | . expression LOGICAL_OR expression
   44           | . expression LOGICAL_AND expression
   45           | . LOGICAL_NOT expression
   46           | . expression EQ expression
   47           | . expression NE expression
   48           | . expression LS expression
   49           | . expression LSEQ expression
   50           | . expression GTEQ expression
   51           | . expression GT expression
   52           | . expression PLUS expression
   53           | . expression MINUS expression
   54           | . expression MUL expression
   54           | expression MUL . expression
   55           | . MINUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 42
    NUM          shift, and go to state 43
    MINUS        shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45
    PARA_OPEN    shift, and go to state 46

    expression     go to state 105
    primary        go to state 54
    function_call  go to state 55


state 82

   15 function_definition: type ID PARA_OPEN function_parameter_list PARA_CLOSE BRACE_OPEN stmt_list BRACE_CLOSE .

    $default  reduce using rule 15 (function_definition)


state 83

   41 stmt_loop: DO $@5 stmt . WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON

    WHILE  shift, and go to state 106


state 84

   39 stmt_loop: WHILE $@3 PARA_OPEN . expression PARA_CLOSE $@4 stmt
   42 expression: . expression ASSIGN expression
   43           | . expression LOGICAL_OR expression
   44           | . expression LOGICAL_AND expression
   45           | . LOGICAL_NOT expression
   46           | . expression EQ expression
   47           | . expression NE expression
   48           | . expression LS expression
   49           | . expression LSEQ expression
   50           | . expression GTEQ expression
   51           | . expression GT expression
   52           | . expression PLUS expression
   53           | . expression MINUS expression
   54           | . expression MUL expression
   55           | . MINUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 42
    NUM          shift, and go to state 43
    MINUS        shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45
    PARA_OPEN    shift, and go to state 46

    expression     go to state 107
    primary        go to state 54
    function_call  go to state 55


state 85

   32 $@1: .  [PARA_CLOSE]
   33 stmt_conditional: IF PARA_OPEN expression . $@1 PARA_CLOSE stmt_conditional_r
   42 expression: expression . ASSIGN expression
   43           | expression . LOGICAL_OR expression
   44           | expression . LOGICAL_AND expression
   46           | expression . EQ expression
   47           | expression . NE expression
   48           | expression . LS expression
   49           | expression . LSEQ expression
   50           | expression . GTEQ expression
   51           | expression . GT expression
   52           | expression . PLUS expression
   53           | expression . MINUS expression
   54           | expression . MUL expression

    ASSIGN       shift, and go to state 70
    LOGICAL_OR   shift, and go to state 71
    LOGICAL_AND  shift, and go to state 72
    NE           shift, and go to state 73
    EQ           shift, and go to state 74
    GT           shift, and go to state 75
    GTEQ         shift, and go to state 76
    LSEQ         shift, and go to state 77
    LS           shift, and go to state 78
    MINUS        shift, and go to state 79
    PLUS         shift, and go to state 80
    MUL          shift, and go to state 81

    $default  reduce using rule 32 ($@1)

    $@1  go to state 108


state 86

   28 stmt: RETURN expression SEMICOLON .

    $default  reduce using rule 28 (stmt)


state 87

   31 stmt_block: BRACE_OPEN stmt_list BRACE_CLOSE .

    $default  reduce using rule 31 (stmt_block)


state 88

   62 function_call: ID PARA_OPEN PARA_CLOSE .

    $default  reduce using rule 62 (function_call)


state 89

   42 expression: expression . ASSIGN expression
   43           | expression . LOGICAL_OR expression
   44           | expression . LOGICAL_AND expression
   46           | expression . EQ expression
   47           | expression . NE expression
   48           | expression . LS expression
   49           | expression . LSEQ expression
   50           | expression . GTEQ expression
   51           | expression . GT expression
   52           | expression . PLUS expression
   53           | expression . MINUS expression
   54           | expression . MUL expression
   65 function_call_parameters: expression .  [COMMA, PARA_CLOSE]

    ASSIGN       shift, and go to state 70
    LOGICAL_OR   shift, and go to state 71
    LOGICAL_AND  shift, and go to state 72
    NE           shift, and go to state 73
    EQ           shift, and go to state 74
    GT           shift, and go to state 75
    GTEQ         shift, and go to state 76
    LSEQ         shift, and go to state 77
    LS           shift, and go to state 78
    MINUS        shift, and go to state 79
    PLUS         shift, and go to state 80
    MUL          shift, and go to state 81

    $default  reduce using rule 65 (function_call_parameters)


state 90

   63 function_call: ID PARA_OPEN function_call_parameters . PARA_CLOSE
   64 function_call_parameters: function_call_parameters . COMMA expression

    COMMA       shift, and go to state 109
    PARA_CLOSE  shift, and go to state 110


state 91

   61 primary: ID .

    $default  reduce using rule 61 (primary)


state 92

   56 expression: ID BRACKET_OPEN primary . BRACKET_CLOSE

    BRACKET_CLOSE  shift, and go to state 111


state 93

   57 expression: PARA_OPEN expression PARA_CLOSE .

    $default  reduce using rule 57 (expression)


state 94

   42 expression: expression . ASSIGN expression
   42           | expression ASSIGN expression .  [COMMA, SEMICOLON, PARA_CLOSE]
   43           | expression . LOGICAL_OR expression
   44           | expression . LOGICAL_AND expression
   46           | expression . EQ expression
   47           | expression . NE expression
   48           | expression . LS expression
   49           | expression . LSEQ expression
   50           | expression . GTEQ expression
   51           | expression . GT expression
   52           | expression . PLUS expression
   53           | expression . MINUS expression
   54           | expression . MUL expression

    ASSIGN       shift, and go to state 70
    LOGICAL_OR   shift, and go to state 71
    LOGICAL_AND  shift, and go to state 72
    NE           shift, and go to state 73
    EQ           shift, and go to state 74
    GT           shift, and go to state 75
    GTEQ         shift, and go to state 76
    LSEQ         shift, and go to state 77
    LS           shift, and go to state 78
    MINUS        shift, and go to state 79
    PLUS         shift, and go to state 80
    MUL          shift, and go to state 81

    $default  reduce using rule 42 (expression)

    Conflict between rule 42 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 42 and token LOGICAL_OR resolved as shift (ASSIGN < LOGICAL_OR).
    Conflict between rule 42 and token LOGICAL_AND resolved as shift (ASSIGN < LOGICAL_AND).
    Conflict between rule 42 and token NE resolved as shift (ASSIGN < NE).
    Conflict between rule 42 and token EQ resolved as shift (ASSIGN < EQ).
    Conflict between rule 42 and token GT resolved as shift (ASSIGN < GT).
    Conflict between rule 42 and token GTEQ resolved as shift (ASSIGN < GTEQ).
    Conflict between rule 42 and token LSEQ resolved as shift (ASSIGN < LSEQ).
    Conflict between rule 42 and token LS resolved as shift (ASSIGN < LS).
    Conflict between rule 42 and token MINUS resolved as shift (ASSIGN < MINUS).
    Conflict between rule 42 and token PLUS resolved as shift (ASSIGN < PLUS).
    Conflict between rule 42 and token MUL resolved as shift (ASSIGN < MUL).


state 95

   42 expression: expression . ASSIGN expression
   43           | expression . LOGICAL_OR expression
   43           | expression LOGICAL_OR expression .  [COMMA, SEMICOLON, ASSIGN, LOGICAL_OR, PARA_CLOSE]
   44           | expression . LOGICAL_AND expression
   46           | expression . EQ expression
   47           | expression . NE expression
   48           | expression . LS expression
   49           | expression . LSEQ expression
   50           | expression . GTEQ expression
   51           | expression . GT expression
   52           | expression . PLUS expression
   53           | expression . MINUS expression
   54           | expression . MUL expression

    LOGICAL_AND  shift, and go to state 72
    NE           shift, and go to state 73
    EQ           shift, and go to state 74
    GT           shift, and go to state 75
    GTEQ         shift, and go to state 76
    LSEQ         shift, and go to state 77
    LS           shift, and go to state 78
    MINUS        shift, and go to state 79
    PLUS         shift, and go to state 80
    MUL          shift, and go to state 81

    $default  reduce using rule 43 (expression)

    Conflict between rule 43 and token ASSIGN resolved as reduce (ASSIGN < LOGICAL_OR).
    Conflict between rule 43 and token LOGICAL_OR resolved as reduce (%left LOGICAL_OR).
    Conflict between rule 43 and token LOGICAL_AND resolved as shift (LOGICAL_OR < LOGICAL_AND).
    Conflict between rule 43 and token NE resolved as shift (LOGICAL_OR < NE).
    Conflict between rule 43 and token EQ resolved as shift (LOGICAL_OR < EQ).
    Conflict between rule 43 and token GT resolved as shift (LOGICAL_OR < GT).
    Conflict between rule 43 and token GTEQ resolved as shift (LOGICAL_OR < GTEQ).
    Conflict between rule 43 and token LSEQ resolved as shift (LOGICAL_OR < LSEQ).
    Conflict between rule 43 and token LS resolved as shift (LOGICAL_OR < LS).
    Conflict between rule 43 and token MINUS resolved as shift (LOGICAL_OR < MINUS).
    Conflict between rule 43 and token PLUS resolved as shift (LOGICAL_OR < PLUS).
    Conflict between rule 43 and token MUL resolved as shift (LOGICAL_OR < MUL).


state 96

   42 expression: expression . ASSIGN expression
   43           | expression . LOGICAL_OR expression
   44           | expression . LOGICAL_AND expression
   44           | expression LOGICAL_AND expression .  [COMMA, SEMICOLON, ASSIGN, LOGICAL_OR, LOGICAL_AND, PARA_CLOSE]
   46           | expression . EQ expression
   47           | expression . NE expression
   48           | expression . LS expression
   49           | expression . LSEQ expression
   50           | expression . GTEQ expression
   51           | expression . GT expression
   52           | expression . PLUS expression
   53           | expression . MINUS expression
   54           | expression . MUL expression

    NE     shift, and go to state 73
    EQ     shift, and go to state 74
    GT     shift, and go to state 75
    GTEQ   shift, and go to state 76
    LSEQ   shift, and go to state 77
    LS     shift, and go to state 78
    MINUS  shift, and go to state 79
    PLUS   shift, and go to state 80
    MUL    shift, and go to state 81

    $default  reduce using rule 44 (expression)

    Conflict between rule 44 and token ASSIGN resolved as reduce (ASSIGN < LOGICAL_AND).
    Conflict between rule 44 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < LOGICAL_AND).
    Conflict between rule 44 and token LOGICAL_AND resolved as reduce (%left LOGICAL_AND).
    Conflict between rule 44 and token NE resolved as shift (LOGICAL_AND < NE).
    Conflict between rule 44 and token EQ resolved as shift (LOGICAL_AND < EQ).
    Conflict between rule 44 and token GT resolved as shift (LOGICAL_AND < GT).
    Conflict between rule 44 and token GTEQ resolved as shift (LOGICAL_AND < GTEQ).
    Conflict between rule 44 and token LSEQ resolved as shift (LOGICAL_AND < LSEQ).
    Conflict between rule 44 and token LS resolved as shift (LOGICAL_AND < LS).
    Conflict between rule 44 and token MINUS resolved as shift (LOGICAL_AND < MINUS).
    Conflict between rule 44 and token PLUS resolved as shift (LOGICAL_AND < PLUS).
    Conflict between rule 44 and token MUL resolved as shift (LOGICAL_AND < MUL).


state 97

   42 expression: expression . ASSIGN expression
   43           | expression . LOGICAL_OR expression
   44           | expression . LOGICAL_AND expression
   46           | expression . EQ expression
   47           | expression . NE expression
   47           | expression NE expression .  [COMMA, SEMICOLON, ASSIGN, LOGICAL_OR, LOGICAL_AND, NE, EQ, PARA_CLOSE]
   48           | expression . LS expression
   49           | expression . LSEQ expression
   50           | expression . GTEQ expression
   51           | expression . GT expression
   52           | expression . PLUS expression
   53           | expression . MINUS expression
   54           | expression . MUL expression

    GT     shift, and go to state 75
    GTEQ   shift, and go to state 76
    LSEQ   shift, and go to state 77
    LS     shift, and go to state 78
    MINUS  shift, and go to state 79
    PLUS   shift, and go to state 80
    MUL    shift, and go to state 81

    $default  reduce using rule 47 (expression)

    Conflict between rule 47 and token ASSIGN resolved as reduce (ASSIGN < NE).
    Conflict between rule 47 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < NE).
    Conflict between rule 47 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < NE).
    Conflict between rule 47 and token NE resolved as reduce (%left NE).
    Conflict between rule 47 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 47 and token GT resolved as shift (NE < GT).
    Conflict between rule 47 and token GTEQ resolved as shift (NE < GTEQ).
    Conflict between rule 47 and token LSEQ resolved as shift (NE < LSEQ).
    Conflict between rule 47 and token LS resolved as shift (NE < LS).
    Conflict between rule 47 and token MINUS resolved as shift (NE < MINUS).
    Conflict between rule 47 and token PLUS resolved as shift (NE < PLUS).
    Conflict between rule 47 and token MUL resolved as shift (NE < MUL).


state 98

   42 expression: expression . ASSIGN expression
   43           | expression . LOGICAL_OR expression
   44           | expression . LOGICAL_AND expression
   46           | expression . EQ expression
   46           | expression EQ expression .  [COMMA, SEMICOLON, ASSIGN, LOGICAL_OR, LOGICAL_AND, NE, EQ, PARA_CLOSE]
   47           | expression . NE expression
   48           | expression . LS expression
   49           | expression . LSEQ expression
   50           | expression . GTEQ expression
   51           | expression . GT expression
   52           | expression . PLUS expression
   53           | expression . MINUS expression
   54           | expression . MUL expression

    GT     shift, and go to state 75
    GTEQ   shift, and go to state 76
    LSEQ   shift, and go to state 77
    LS     shift, and go to state 78
    MINUS  shift, and go to state 79
    PLUS   shift, and go to state 80
    MUL    shift, and go to state 81

    $default  reduce using rule 46 (expression)

    Conflict between rule 46 and token ASSIGN resolved as reduce (ASSIGN < EQ).
    Conflict between rule 46 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < EQ).
    Conflict between rule 46 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < EQ).
    Conflict between rule 46 and token NE resolved as reduce (%left NE).
    Conflict between rule 46 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 46 and token GT resolved as shift (EQ < GT).
    Conflict between rule 46 and token GTEQ resolved as shift (EQ < GTEQ).
    Conflict between rule 46 and token LSEQ resolved as shift (EQ < LSEQ).
    Conflict between rule 46 and token LS resolved as shift (EQ < LS).
    Conflict between rule 46 and token MINUS resolved as shift (EQ < MINUS).
    Conflict between rule 46 and token PLUS resolved as shift (EQ < PLUS).
    Conflict between rule 46 and token MUL resolved as shift (EQ < MUL).


state 99

   42 expression: expression . ASSIGN expression
   43           | expression . LOGICAL_OR expression
   44           | expression . LOGICAL_AND expression
   46           | expression . EQ expression
   47           | expression . NE expression
   48           | expression . LS expression
   49           | expression . LSEQ expression
   50           | expression . GTEQ expression
   51           | expression . GT expression
   51           | expression GT expression .  [COMMA, SEMICOLON, ASSIGN, LOGICAL_OR, LOGICAL_AND, NE, EQ, GT, GTEQ, LSEQ, LS, PARA_CLOSE]
   52           | expression . PLUS expression
   53           | expression . MINUS expression
   54           | expression . MUL expression

    MINUS  shift, and go to state 79
    PLUS   shift, and go to state 80
    MUL    shift, and go to state 81

    $default  reduce using rule 51 (expression)

    Conflict between rule 51 and token ASSIGN resolved as reduce (ASSIGN < GT).
    Conflict between rule 51 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < GT).
    Conflict between rule 51 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < GT).
    Conflict between rule 51 and token NE resolved as reduce (NE < GT).
    Conflict between rule 51 and token EQ resolved as reduce (EQ < GT).
    Conflict between rule 51 and token GT resolved as reduce (%left GT).
    Conflict between rule 51 and token GTEQ resolved as reduce (%left GTEQ).
    Conflict between rule 51 and token LSEQ resolved as reduce (%left LSEQ).
    Conflict between rule 51 and token LS resolved as reduce (%left LS).
    Conflict between rule 51 and token MINUS resolved as shift (GT < MINUS).
    Conflict between rule 51 and token PLUS resolved as shift (GT < PLUS).
    Conflict between rule 51 and token MUL resolved as shift (GT < MUL).


state 100

   42 expression: expression . ASSIGN expression
   43           | expression . LOGICAL_OR expression
   44           | expression . LOGICAL_AND expression
   46           | expression . EQ expression
   47           | expression . NE expression
   48           | expression . LS expression
   49           | expression . LSEQ expression
   50           | expression . GTEQ expression
   50           | expression GTEQ expression .  [COMMA, SEMICOLON, ASSIGN, LOGICAL_OR, LOGICAL_AND, NE, EQ, GT, GTEQ, LSEQ, LS, PARA_CLOSE]
   51           | expression . GT expression
   52           | expression . PLUS expression
   53           | expression . MINUS expression
   54           | expression . MUL expression

    MINUS  shift, and go to state 79
    PLUS   shift, and go to state 80
    MUL    shift, and go to state 81

    $default  reduce using rule 50 (expression)

    Conflict between rule 50 and token ASSIGN resolved as reduce (ASSIGN < GTEQ).
    Conflict between rule 50 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < GTEQ).
    Conflict between rule 50 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < GTEQ).
    Conflict between rule 50 and token NE resolved as reduce (NE < GTEQ).
    Conflict between rule 50 and token EQ resolved as reduce (EQ < GTEQ).
    Conflict between rule 50 and token GT resolved as reduce (%left GT).
    Conflict between rule 50 and token GTEQ resolved as reduce (%left GTEQ).
    Conflict between rule 50 and token LSEQ resolved as reduce (%left LSEQ).
    Conflict between rule 50 and token LS resolved as reduce (%left LS).
    Conflict between rule 50 and token MINUS resolved as shift (GTEQ < MINUS).
    Conflict between rule 50 and token PLUS resolved as shift (GTEQ < PLUS).
    Conflict between rule 50 and token MUL resolved as shift (GTEQ < MUL).


state 101

   42 expression: expression . ASSIGN expression
   43           | expression . LOGICAL_OR expression
   44           | expression . LOGICAL_AND expression
   46           | expression . EQ expression
   47           | expression . NE expression
   48           | expression . LS expression
   49           | expression . LSEQ expression
   49           | expression LSEQ expression .  [COMMA, SEMICOLON, ASSIGN, LOGICAL_OR, LOGICAL_AND, NE, EQ, GT, GTEQ, LSEQ, LS, PARA_CLOSE]
   50           | expression . GTEQ expression
   51           | expression . GT expression
   52           | expression . PLUS expression
   53           | expression . MINUS expression
   54           | expression . MUL expression

    MINUS  shift, and go to state 79
    PLUS   shift, and go to state 80
    MUL    shift, and go to state 81

    $default  reduce using rule 49 (expression)

    Conflict between rule 49 and token ASSIGN resolved as reduce (ASSIGN < LSEQ).
    Conflict between rule 49 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < LSEQ).
    Conflict between rule 49 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < LSEQ).
    Conflict between rule 49 and token NE resolved as reduce (NE < LSEQ).
    Conflict between rule 49 and token EQ resolved as reduce (EQ < LSEQ).
    Conflict between rule 49 and token GT resolved as reduce (%left GT).
    Conflict between rule 49 and token GTEQ resolved as reduce (%left GTEQ).
    Conflict between rule 49 and token LSEQ resolved as reduce (%left LSEQ).
    Conflict between rule 49 and token LS resolved as reduce (%left LS).
    Conflict between rule 49 and token MINUS resolved as shift (LSEQ < MINUS).
    Conflict between rule 49 and token PLUS resolved as shift (LSEQ < PLUS).
    Conflict between rule 49 and token MUL resolved as shift (LSEQ < MUL).


state 102

   42 expression: expression . ASSIGN expression
   43           | expression . LOGICAL_OR expression
   44           | expression . LOGICAL_AND expression
   46           | expression . EQ expression
   47           | expression . NE expression
   48           | expression . LS expression
   48           | expression LS expression .  [COMMA, SEMICOLON, ASSIGN, LOGICAL_OR, LOGICAL_AND, NE, EQ, GT, GTEQ, LSEQ, LS, PARA_CLOSE]
   49           | expression . LSEQ expression
   50           | expression . GTEQ expression
   51           | expression . GT expression
   52           | expression . PLUS expression
   53           | expression . MINUS expression
   54           | expression . MUL expression

    MINUS  shift, and go to state 79
    PLUS   shift, and go to state 80
    MUL    shift, and go to state 81

    $default  reduce using rule 48 (expression)

    Conflict between rule 48 and token ASSIGN resolved as reduce (ASSIGN < LS).
    Conflict between rule 48 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < LS).
    Conflict between rule 48 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < LS).
    Conflict between rule 48 and token NE resolved as reduce (NE < LS).
    Conflict between rule 48 and token EQ resolved as reduce (EQ < LS).
    Conflict between rule 48 and token GT resolved as reduce (%left GT).
    Conflict between rule 48 and token GTEQ resolved as reduce (%left GTEQ).
    Conflict between rule 48 and token LSEQ resolved as reduce (%left LSEQ).
    Conflict between rule 48 and token LS resolved as reduce (%left LS).
    Conflict between rule 48 and token MINUS resolved as shift (LS < MINUS).
    Conflict between rule 48 and token PLUS resolved as shift (LS < PLUS).
    Conflict between rule 48 and token MUL resolved as shift (LS < MUL).


state 103

   42 expression: expression . ASSIGN expression
   43           | expression . LOGICAL_OR expression
   44           | expression . LOGICAL_AND expression
   46           | expression . EQ expression
   47           | expression . NE expression
   48           | expression . LS expression
   49           | expression . LSEQ expression
   50           | expression . GTEQ expression
   51           | expression . GT expression
   52           | expression . PLUS expression
   53           | expression . MINUS expression
   53           | expression MINUS expression .  [COMMA, SEMICOLON, ASSIGN, LOGICAL_OR, LOGICAL_AND, NE, EQ, GT, GTEQ, LSEQ, LS, MINUS, PLUS, PARA_CLOSE]
   54           | expression . MUL expression

    MUL  shift, and go to state 81

    $default  reduce using rule 53 (expression)

    Conflict between rule 53 and token ASSIGN resolved as reduce (ASSIGN < MINUS).
    Conflict between rule 53 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < MINUS).
    Conflict between rule 53 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < MINUS).
    Conflict between rule 53 and token NE resolved as reduce (NE < MINUS).
    Conflict between rule 53 and token EQ resolved as reduce (EQ < MINUS).
    Conflict between rule 53 and token GT resolved as reduce (GT < MINUS).
    Conflict between rule 53 and token GTEQ resolved as reduce (GTEQ < MINUS).
    Conflict between rule 53 and token LSEQ resolved as reduce (LSEQ < MINUS).
    Conflict between rule 53 and token LS resolved as reduce (LS < MINUS).
    Conflict between rule 53 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 53 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 53 and token MUL resolved as shift (MINUS < MUL).


state 104

   42 expression: expression . ASSIGN expression
   43           | expression . LOGICAL_OR expression
   44           | expression . LOGICAL_AND expression
   46           | expression . EQ expression
   47           | expression . NE expression
   48           | expression . LS expression
   49           | expression . LSEQ expression
   50           | expression . GTEQ expression
   51           | expression . GT expression
   52           | expression . PLUS expression
   52           | expression PLUS expression .  [COMMA, SEMICOLON, ASSIGN, LOGICAL_OR, LOGICAL_AND, NE, EQ, GT, GTEQ, LSEQ, LS, MINUS, PLUS, PARA_CLOSE]
   53           | expression . MINUS expression
   54           | expression . MUL expression

    MUL  shift, and go to state 81

    $default  reduce using rule 52 (expression)

    Conflict between rule 52 and token ASSIGN resolved as reduce (ASSIGN < PLUS).
    Conflict between rule 52 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < PLUS).
    Conflict between rule 52 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < PLUS).
    Conflict between rule 52 and token NE resolved as reduce (NE < PLUS).
    Conflict between rule 52 and token EQ resolved as reduce (EQ < PLUS).
    Conflict between rule 52 and token GT resolved as reduce (GT < PLUS).
    Conflict between rule 52 and token GTEQ resolved as reduce (GTEQ < PLUS).
    Conflict between rule 52 and token LSEQ resolved as reduce (LSEQ < PLUS).
    Conflict between rule 52 and token LS resolved as reduce (LS < PLUS).
    Conflict between rule 52 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 52 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 52 and token MUL resolved as shift (PLUS < MUL).


state 105

   42 expression: expression . ASSIGN expression
   43           | expression . LOGICAL_OR expression
   44           | expression . LOGICAL_AND expression
   46           | expression . EQ expression
   47           | expression . NE expression
   48           | expression . LS expression
   49           | expression . LSEQ expression
   50           | expression . GTEQ expression
   51           | expression . GT expression
   52           | expression . PLUS expression
   53           | expression . MINUS expression
   54           | expression . MUL expression
   54           | expression MUL expression .  [COMMA, SEMICOLON, ASSIGN, LOGICAL_OR, LOGICAL_AND, NE, EQ, GT, GTEQ, LSEQ, LS, MINUS, PLUS, MUL, PARA_CLOSE]

    $default  reduce using rule 54 (expression)

    Conflict between rule 54 and token ASSIGN resolved as reduce (ASSIGN < MUL).
    Conflict between rule 54 and token LOGICAL_OR resolved as reduce (LOGICAL_OR < MUL).
    Conflict between rule 54 and token LOGICAL_AND resolved as reduce (LOGICAL_AND < MUL).
    Conflict between rule 54 and token NE resolved as reduce (NE < MUL).
    Conflict between rule 54 and token EQ resolved as reduce (EQ < MUL).
    Conflict between rule 54 and token GT resolved as reduce (GT < MUL).
    Conflict between rule 54 and token GTEQ resolved as reduce (GTEQ < MUL).
    Conflict between rule 54 and token LSEQ resolved as reduce (LSEQ < MUL).
    Conflict between rule 54 and token LS resolved as reduce (LS < MUL).
    Conflict between rule 54 and token MINUS resolved as reduce (MINUS < MUL).
    Conflict between rule 54 and token PLUS resolved as reduce (PLUS < MUL).
    Conflict between rule 54 and token MUL resolved as reduce (%left MUL).


state 106

   41 stmt_loop: DO $@5 stmt WHILE . PARA_OPEN expression PARA_CLOSE SEMICOLON

    PARA_OPEN  shift, and go to state 112


state 107

   39 stmt_loop: WHILE $@3 PARA_OPEN expression . PARA_CLOSE $@4 stmt
   42 expression: expression . ASSIGN expression
   43           | expression . LOGICAL_OR expression
   44           | expression . LOGICAL_AND expression
   46           | expression . EQ expression
   47           | expression . NE expression
   48           | expression . LS expression
   49           | expression . LSEQ expression
   50           | expression . GTEQ expression
   51           | expression . GT expression
   52           | expression . PLUS expression
   53           | expression . MINUS expression
   54           | expression . MUL expression

    ASSIGN       shift, and go to state 70
    LOGICAL_OR   shift, and go to state 71
    LOGICAL_AND  shift, and go to state 72
    NE           shift, and go to state 73
    EQ           shift, and go to state 74
    GT           shift, and go to state 75
    GTEQ         shift, and go to state 76
    LSEQ         shift, and go to state 77
    LS           shift, and go to state 78
    MINUS        shift, and go to state 79
    PLUS         shift, and go to state 80
    MUL          shift, and go to state 81
    PARA_CLOSE   shift, and go to state 113


state 108

   33 stmt_conditional: IF PARA_OPEN expression $@1 . PARA_CLOSE stmt_conditional_r

    PARA_CLOSE  shift, and go to state 114


state 109

   42 expression: . expression ASSIGN expression
   43           | . expression LOGICAL_OR expression
   44           | . expression LOGICAL_AND expression
   45           | . LOGICAL_NOT expression
   46           | . expression EQ expression
   47           | . expression NE expression
   48           | . expression LS expression
   49           | . expression LSEQ expression
   50           | . expression GTEQ expression
   51           | . expression GT expression
   52           | . expression PLUS expression
   53           | . expression MINUS expression
   54           | . expression MUL expression
   55           | . MINUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE
   64 function_call_parameters: function_call_parameters COMMA . expression

    ID           shift, and go to state 42
    NUM          shift, and go to state 43
    MINUS        shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45
    PARA_OPEN    shift, and go to state 46

    expression     go to state 115
    primary        go to state 54
    function_call  go to state 55


state 110

   63 function_call: ID PARA_OPEN function_call_parameters PARA_CLOSE .

    $default  reduce using rule 63 (function_call)


state 111

   56 expression: ID BRACKET_OPEN primary BRACKET_CLOSE .

    $default  reduce using rule 56 (expression)


state 112

   41 stmt_loop: DO $@5 stmt WHILE PARA_OPEN . expression PARA_CLOSE SEMICOLON
   42 expression: . expression ASSIGN expression
   43           | . expression LOGICAL_OR expression
   44           | . expression LOGICAL_AND expression
   45           | . LOGICAL_NOT expression
   46           | . expression EQ expression
   47           | . expression NE expression
   48           | . expression LS expression
   49           | . expression LSEQ expression
   50           | . expression GTEQ expression
   51           | . expression GT expression
   52           | . expression PLUS expression
   53           | . expression MINUS expression
   54           | . expression MUL expression
   55           | . MINUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    ID           shift, and go to state 42
    NUM          shift, and go to state 43
    MINUS        shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45
    PARA_OPEN    shift, and go to state 46

    expression     go to state 116
    primary        go to state 54
    function_call  go to state 55


state 113

   38 $@4: .
   39 stmt_loop: WHILE $@3 PARA_OPEN expression PARA_CLOSE . $@4 stmt

    $default  reduce using rule 38 ($@4)

    $@4  go to state 117


state 114

    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   23 stmt: . stmt_block
   24     | . variable_declaration SEMICOLON
   25     | . expression SEMICOLON
   26     | . stmt_conditional
   27     | . stmt_loop
   28     | . RETURN expression SEMICOLON
   29     | . RETURN SEMICOLON
   30     | . SEMICOLON
   31 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   33 stmt_conditional: . IF PARA_OPEN expression $@1 PARA_CLOSE stmt_conditional_r
   33                 | IF PARA_OPEN expression $@1 PARA_CLOSE . stmt_conditional_r
   34 stmt_conditional_r: . stmt
   36                   | . stmt ELSE $@2 stmt
   39 stmt_loop: . WHILE $@3 PARA_OPEN expression PARA_CLOSE $@4 stmt
   41          | . DO $@5 stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   42 expression: . expression ASSIGN expression
   43           | . expression LOGICAL_OR expression
   44           | . expression LOGICAL_AND expression
   45           | . LOGICAL_NOT expression
   46           | . expression EQ expression
   47           | . expression NE expression
   48           | . expression LS expression
   49           | . expression LSEQ expression
   50           | . expression GTEQ expression
   51           | . expression GT expression
   52           | . expression PLUS expression
   53           | . expression MINUS expression
   54           | . expression MUL expression
   55           | . MINUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           shift, and go to state 35
    WHILE        shift, and go to state 36
    IF           shift, and go to state 37
    INT          shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 38
    SEMICOLON    shift, and go to state 39
    BRACE_OPEN   shift, and go to state 40
    ID           shift, and go to state 42
    NUM          shift, and go to state 43
    MINUS        shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45
    PARA_OPEN    shift, and go to state 46

    type                  go to state 47
    variable_declaration  go to state 48
    stmt                  go to state 118
    stmt_block            go to state 50
    stmt_conditional      go to state 51
    stmt_conditional_r    go to state 119
    stmt_loop             go to state 52
    expression            go to state 53
    primary               go to state 54
    function_call         go to state 55


state 115

   42 expression: expression . ASSIGN expression
   43           | expression . LOGICAL_OR expression
   44           | expression . LOGICAL_AND expression
   46           | expression . EQ expression
   47           | expression . NE expression
   48           | expression . LS expression
   49           | expression . LSEQ expression
   50           | expression . GTEQ expression
   51           | expression . GT expression
   52           | expression . PLUS expression
   53           | expression . MINUS expression
   54           | expression . MUL expression
   64 function_call_parameters: function_call_parameters COMMA expression .  [COMMA, PARA_CLOSE]

    ASSIGN       shift, and go to state 70
    LOGICAL_OR   shift, and go to state 71
    LOGICAL_AND  shift, and go to state 72
    NE           shift, and go to state 73
    EQ           shift, and go to state 74
    GT           shift, and go to state 75
    GTEQ         shift, and go to state 76
    LSEQ         shift, and go to state 77
    LS           shift, and go to state 78
    MINUS        shift, and go to state 79
    PLUS         shift, and go to state 80
    MUL          shift, and go to state 81

    $default  reduce using rule 64 (function_call_parameters)


state 116

   41 stmt_loop: DO $@5 stmt WHILE PARA_OPEN expression . PARA_CLOSE SEMICOLON
   42 expression: expression . ASSIGN expression
   43           | expression . LOGICAL_OR expression
   44           | expression . LOGICAL_AND expression
   46           | expression . EQ expression
   47           | expression . NE expression
   48           | expression . LS expression
   49           | expression . LSEQ expression
   50           | expression . GTEQ expression
   51           | expression . GT expression
   52           | expression . PLUS expression
   53           | expression . MINUS expression
   54           | expression . MUL expression

    ASSIGN       shift, and go to state 70
    LOGICAL_OR   shift, and go to state 71
    LOGICAL_AND  shift, and go to state 72
    NE           shift, and go to state 73
    EQ           shift, and go to state 74
    GT           shift, and go to state 75
    GTEQ         shift, and go to state 76
    LSEQ         shift, and go to state 77
    LS           shift, and go to state 78
    MINUS        shift, and go to state 79
    PLUS         shift, and go to state 80
    MUL          shift, and go to state 81
    PARA_CLOSE   shift, and go to state 120


state 117

    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   23 stmt: . stmt_block
   24     | . variable_declaration SEMICOLON
   25     | . expression SEMICOLON
   26     | . stmt_conditional
   27     | . stmt_loop
   28     | . RETURN expression SEMICOLON
   29     | . RETURN SEMICOLON
   30     | . SEMICOLON
   31 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   33 stmt_conditional: . IF PARA_OPEN expression $@1 PARA_CLOSE stmt_conditional_r
   39 stmt_loop: . WHILE $@3 PARA_OPEN expression PARA_CLOSE $@4 stmt
   39          | WHILE $@3 PARA_OPEN expression PARA_CLOSE $@4 . stmt
   41          | . DO $@5 stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   42 expression: . expression ASSIGN expression
   43           | . expression LOGICAL_OR expression
   44           | . expression LOGICAL_AND expression
   45           | . LOGICAL_NOT expression
   46           | . expression EQ expression
   47           | . expression NE expression
   48           | . expression LS expression
   49           | . expression LSEQ expression
   50           | . expression GTEQ expression
   51           | . expression GT expression
   52           | . expression PLUS expression
   53           | . expression MINUS expression
   54           | . expression MUL expression
   55           | . MINUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           shift, and go to state 35
    WHILE        shift, and go to state 36
    IF           shift, and go to state 37
    INT          shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 38
    SEMICOLON    shift, and go to state 39
    BRACE_OPEN   shift, and go to state 40
    ID           shift, and go to state 42
    NUM          shift, and go to state 43
    MINUS        shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45
    PARA_OPEN    shift, and go to state 46

    type                  go to state 47
    variable_declaration  go to state 48
    stmt                  go to state 121
    stmt_block            go to state 50
    stmt_conditional      go to state 51
    stmt_loop             go to state 52
    expression            go to state 53
    primary               go to state 54
    function_call         go to state 55


state 118

   34 stmt_conditional_r: stmt .  [DO, WHILE, IF, ELSE, INT, VOID, RETURN, SEMICOLON, BRACE_OPEN, BRACE_CLOSE, ID, NUM, MINUS, LOGICAL_NOT, PARA_OPEN]
   36                   | stmt . ELSE $@2 stmt

    ELSE  shift, and go to state 122

    ELSE      [reduce using rule 34 (stmt_conditional_r)]
    $default  reduce using rule 34 (stmt_conditional_r)


state 119

   33 stmt_conditional: IF PARA_OPEN expression $@1 PARA_CLOSE stmt_conditional_r .

    $default  reduce using rule 33 (stmt_conditional)


state 120

   41 stmt_loop: DO $@5 stmt WHILE PARA_OPEN expression PARA_CLOSE . SEMICOLON

    SEMICOLON  shift, and go to state 123


state 121

   39 stmt_loop: WHILE $@3 PARA_OPEN expression PARA_CLOSE $@4 stmt .

    $default  reduce using rule 39 (stmt_loop)


state 122

   35 $@2: .
   36 stmt_conditional_r: stmt ELSE . $@2 stmt

    $default  reduce using rule 35 ($@2)

    $@2  go to state 124


state 123

   41 stmt_loop: DO $@5 stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON .

    $default  reduce using rule 41 (stmt_loop)


state 124

    8 type: . INT
    9     | . VOID
   10 variable_declaration: . variable_declaration COMMA identifier_declaration
   11                     | . type identifier_declaration
   23 stmt: . stmt_block
   24     | . variable_declaration SEMICOLON
   25     | . expression SEMICOLON
   26     | . stmt_conditional
   27     | . stmt_loop
   28     | . RETURN expression SEMICOLON
   29     | . RETURN SEMICOLON
   30     | . SEMICOLON
   31 stmt_block: . BRACE_OPEN stmt_list BRACE_CLOSE
   33 stmt_conditional: . IF PARA_OPEN expression $@1 PARA_CLOSE stmt_conditional_r
   36 stmt_conditional_r: stmt ELSE $@2 . stmt
   39 stmt_loop: . WHILE $@3 PARA_OPEN expression PARA_CLOSE $@4 stmt
   41          | . DO $@5 stmt WHILE PARA_OPEN expression PARA_CLOSE SEMICOLON
   42 expression: . expression ASSIGN expression
   43           | . expression LOGICAL_OR expression
   44           | . expression LOGICAL_AND expression
   45           | . LOGICAL_NOT expression
   46           | . expression EQ expression
   47           | . expression NE expression
   48           | . expression LS expression
   49           | . expression LSEQ expression
   50           | . expression GTEQ expression
   51           | . expression GT expression
   52           | . expression PLUS expression
   53           | . expression MINUS expression
   54           | . expression MUL expression
   55           | . MINUS expression
   56           | . ID BRACKET_OPEN primary BRACKET_CLOSE
   57           | . PARA_OPEN expression PARA_CLOSE
   58           | . function_call
   59           | . primary
   60 primary: . NUM
   61        | . ID
   62 function_call: . ID PARA_OPEN PARA_CLOSE
   63              | . ID PARA_OPEN function_call_parameters PARA_CLOSE

    DO           shift, and go to state 35
    WHILE        shift, and go to state 36
    IF           shift, and go to state 37
    INT          shift, and go to state 1
    VOID         shift, and go to state 2
    RETURN       shift, and go to state 38
    SEMICOLON    shift, and go to state 39
    BRACE_OPEN   shift, and go to state 40
    ID           shift, and go to state 42
    NUM          shift, and go to state 43
    MINUS        shift, and go to state 44
    LOGICAL_NOT  shift, and go to state 45
    PARA_OPEN    shift, and go to state 46

    type                  go to state 47
    variable_declaration  go to state 48
    stmt                  go to state 125
    stmt_block            go to state 50
    stmt_conditional      go to state 51
    stmt_loop             go to state 52
    expression            go to state 53
    primary               go to state 54
    function_call         go to state 55


state 125

   36 stmt_conditional_r: stmt ELSE $@2 stmt .

    $default  reduce using rule 36 (stmt_conditional_r)
